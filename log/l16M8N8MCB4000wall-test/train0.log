INFO    model_name ->  xxz1d
INFO    nspin ->  16
INFO    model_dim ->  1
INFO    Jx ->  0.0625
INFO    Jy ->  0.0625
INFO    Jz ->  -0.0625
INFO    hz ->  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
INFO    pbc_x ->  True
INFO    total_sz ->  0
INFO    energy_ub ->  0.45
INFO    energy_lb ->  -0.25
INFO    net_type ->  ensemble
INFO    device ->  cuda
INFO    num_device ->  1
INFO    cell_size ->  4
INFO    dtype ->  torch.float32
INFO    hidden ->  128
INFO    phase_hidden ->  128
INFO    vanilla_mode ->  False
INFO    solve_energy_bounds ->  False
INFO    sampling_mode ->  MC
INFO    load_model ->  False
INFO    model_path ->  None
INFO    train ->  True
INFO    observe_SDW ->  False
INFO    hierarchy ->  2
INFO    hierarchy_groups ->  [8]
INFO    nbands ->  [8]
INFO    train_config ->  {'epoches': 1000000, 'start_epoch': 0, 'batchsize_begin': 4000, 'batchsize_end': 4000, 'lr_begin': 0.001, 'lr_scale_fac': 0.96, 'lr_end': 0.0003, 'freq_display': 10, 'freq_save': 1000, 'freq_test': 1000}
INFO    experiment_name ->  l16M8N8MCB4000wall-test
INFO    train_node ->  0
DEBUG  $HOME=C:\Users\salin
DEBUG  CONFIGDIR=C:\Users\salin\.matplotlib
DEBUG  matplotlib data path: C:\Users\salin\Anaconda3\lib\site-packages\matplotlib\mpl-data
DEBUG  loaded rc file C:\Users\salin\Anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
DEBUG  matplotlib version 3.1.0
DEBUG  interactive is False
DEBUG  platform is win32
DEBUG  loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'google', 'sphinxcontrib', 'logging', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', 'weakref', '_weakrefset', 'collections.abc', 'string', '_string', 'threading', 'atexit', 'datetime', 'math', '_datetime', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'util', 'torch', 'platform', 'subprocess', 'signal', 'errno', 'msvcrt', '_winapi', 'torch._utils', 'torch._utils_internal', '__future__', 'torch.version', 'torch._six', 'queue', '_queue', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'glob', 'fnmatch', 'posixpath', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'ast', '_ast', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.financial', 'decimal', '_decimal', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'cython_runtime', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'textwrap', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'difflib', 'pprint', 'unittest.suite', 'unittest.loader', 'unittest.main', 'argparse', 'gettext', 'locale', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'gc', 'tempfile', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'socket', '_socket', 'selectors', 'select', 'torch._C._onnx', 'torch._C._jit_tree_views', 'torch._C.cpp', 'torch._C.cpp.nn', 'torch._C', 'torch.random', 'torch.serialization', 'inspect', 'dis', 'opcode', '_opcode', 'tarfile', 'copy', 'zipfile', 'binascii', 'torch._tensor_str', 'torch.tensor', 'torch.utils', 'torch.utils.throughput_benchmark', 'torch.utils.hooks', 'torch.storage', 'torch.cuda', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', '__mp_main__', 'multiprocessing.util', 'torch.cuda._utils', 'torch.cuda.random', 'torch.cuda.sparse', 'torch.cuda.profiler', 'torch.cuda.nvtx', 'torch.cuda.streams', 'torch.sparse', 'torch.functional', 'torch.nn', 'torch.nn.modules', 'torch.nn.modules.module', 'torch.nn.backends', 'torch.nn.backends.thnn', 'torch.nn.backends.backend', 'torch.nn._functions', 'torch.nn._functions.thnn', 'torch.nn._functions.thnn.auto', 'torch._thnn', 'torch._thnn.utils', 'torch.autograd', 'torch.autograd.variable', 'torch.autograd.function', 'torch.autograd.gradcheck', 'torch.testing', 'torch.autograd.grad_mode', 'torch.autograd.anomaly_mode', 'torch.autograd.profiler', 'torch.nn._functions.thnn.auto_double_backwards', 'torch.nn._functions.thnn.auto_symbolic', 'torch.autograd._functions', 'torch.autograd._functions.tensor', 'torch.autograd._functions.utils', 'torch.nn._functions.thnn.normalization', 'torch.nn._functions.thnn.sparse', 'torch.nn.parameter', 'torch.nn.modules.linear', 'torch.nn.functional', 'torch.nn._reduction', 'torch.nn.modules.utils', 'torch.nn._functions.vision', 'torch.backends', 'torch.backends.cudnn', 'torch.nn.grad', 'torch.nn._VF', 'torch._jit_internal', 'typing', 'typing.io', 'typing.re', 'torch.nn.init', 'torch.nn.modules.conv', 'torch.nn.modules.activation', 'torch.nn.modules.loss', 'torch.nn.modules.container', 'torch.nn.modules.pooling', 'torch.nn.modules.batchnorm', 'torch.nn.modules._functions', 'torch.nn.modules.instancenorm', 'torch.nn.modules.normalization', 'torch.nn.modules.dropout', 'torch.nn.modules.padding', 'torch.nn.modules.sparse', 'torch.nn.modules.rnn', 'torch.nn.utils', 'torch.nn.utils.rnn', 'torch.nn.utils.clip_grad', 'torch.nn.utils.weight_norm', 'torch.nn.utils.convert_parameters', 'torch.nn.utils.spectral_norm', 'torch.nn.utils.fusion', 'torch.nn.modules.pixelshuffle', 'torch.nn.modules.upsampling', 'torch.nn.modules.distance', 'torch.nn.modules.fold', 'torch.nn.modules.adaptive', 'torch.nn.modules.transformer', 'torch.nn.modules.flatten', 'torch.nn.parallel', 'torch.nn.parallel.parallel_apply', 'torch.nn.parallel.replicate', 'torch.cuda.comm', 'torch.cuda.nccl', 'torch.nn.parallel.data_parallel', 'torch.nn.parallel.scatter_gather', 'torch.nn.parallel._functions', 'torch.nn.parallel.distributed', 'torch.distributed', 'torch.nn._intrinsic', 'torch.nn._intrinsic.modules', 'torch.nn._intrinsic.modules.fused', 'torch.nn.quantized', 'torch.nn.quantized.modules', 'torch.nn.quantized.modules.activation', 'torch.nn.quantized.functional', 'torch._ops', 'torch.jit', 'torch.jit.frontend', 'torch.jit.annotations', 'torch.nn.quantized.modules.conv', 'torch.nn.quantized.modules.linear', 'torch.optim', 'torch.optim.adadelta', 'torch.optim.optimizer', 'torch.optim.adagrad', 'torch.optim.adam', 'torch.optim.adamw', 'torch.optim.sparse_adam', 'torch.optim.adamax', 'torch.optim.asgd', 'torch.optim.sgd', 'torch.optim.rprop', 'torch.optim.rmsprop', 'torch.optim.lbfgs', 'torch.optim.lr_scheduler', 'torch.multiprocessing', 'torch.multiprocessing.reductions', 'multiprocessing.resource_sharer', 'torch.multiprocessing.spawn', 'multiprocessing.connection', '_multiprocessing', 'torch.utils.backcompat', 'torch.onnx', 'torch.hub', 'urllib.request', 'base64', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'ssl', '_ssl', 'urllib.error', 'urllib.response', 'nturl2path', 'tqdm', 'tqdm._tqdm', 'tqdm._utils', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'ctypes.wintypes', 'tqdm._monitor', 'tqdm._tqdm_gui', 'tqdm._tqdm_pandas', 'tqdm._main', 'tqdm._version', 'torch.distributions', 'torch.distributions.bernoulli', 'torch.distributions.constraints', 'torch.distributions.exp_family', 'torch.distributions.distribution', 'torch.distributions.utils', 'torch.distributions.beta', 'torch.distributions.dirichlet', 'torch.distributions.binomial', 'torch.distributions.categorical', 'torch.distributions.cauchy', 'torch.distributions.chi2', 'torch.distributions.gamma', 'torch.distributions.constraint_registry', 'torch.distributions.transforms', 'torch.distributions.exponential', 'torch.distributions.fishersnedecor', 'torch.distributions.geometric', 'torch.distributions.gumbel', 'torch.distributions.uniform', 'torch.distributions.transformed_distribution', 'torch.distributions.half_cauchy', 'torch.distributions.half_normal', 'torch.distributions.normal', 'torch.distributions.independent', 'torch.distributions.kl', 'torch.distributions.laplace', 'torch.distributions.lowrank_multivariate_normal', 'torch.distributions.multivariate_normal', 'torch.distributions.one_hot_categorical', 'torch.distributions.pareto', 'torch.distributions.poisson', 'torch.distributions.log_normal', 'torch.distributions.logistic_normal', 'torch.distributions.multinomial', 'torch.distributions.negative_binomial', 'torch.distributions.relaxed_bernoulli', 'torch.distributions.relaxed_categorical', 'torch.distributions.studentT', 'torch.distributions.weibull', 'torch.backends.cuda', 'torch.backends.mkl', 'torch.backends.openmp', 'torch.utils.data', 'torch.utils.data.sampler', 'torch.utils.data.distributed', 'torch.utils.data.dataset', 'torch.utils.data.dataloader', 'torch.utils.data._utils', 'torch.utils.data._utils.worker', 'torch.utils.data._utils.signal_handling', 'torch.utils.data._utils.pin_memory', 'torch.utils.data._utils.collate', 'torch.utils.data._utils.fetch', 'torch.__config__', 'torch.__future__', 'torch._torch_docs', 'torch._tensor_docs', 'torch._storage_docs', 'torch.quasirandom', 'config', 'cgsp', 'torch.utils.tensorboard', 'tensorboard', 'tensorboard.lazy', 'tensorboard.version', 'tensorboard.summary', 'tensorboard.summary.v1', 'tensorboard.plugins', 'tensorboard.plugins.audio', 'tensorboard.plugins.audio.summary', 'tensorboard.util', 'tensorboard.util.encoder', 'tensorboard.util.op_evaluator', 'tensorboard.plugins.audio.metadata', 'tensorboard.compat', 'tensorboard.compat.proto', 'tensorboard.compat.proto.summary_pb2', 'google.protobuf', 'pkg_resources', 'pkgutil', 'plistlib', 'xml', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32com', 'win32api', 'pythoncom', 'pywintypes', 'imp', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sysconfig', 'google.protobuf.descriptor', 'six', 'google.protobuf.internal', 'google.protobuf.internal.api_implementation', 'google.protobuf.internal._api_implementation', 'google.protobuf.pyext', 'google.protobuf.internal.containers', 'google.protobuf.internal.enum_type_wrapper', 'google.protobuf.message', 'google.protobuf.pyext._message', 'google.protobuf.reflection', 'google.protobuf.message_factory', 'google.protobuf.descriptor_pool', 'google.protobuf.descriptor_database', 'google.protobuf.text_encoding', 'google.protobuf.pyext.cpp_message', 'google.protobuf.symbol_database', 'tensorboard.compat.proto.tensor_pb2', 'tensorboard.compat.proto.resource_handle_pb2', 'google.protobuf.internal.well_known_types', 'tensorboard.compat.proto.tensor_shape_pb2', 'tensorboard.compat.proto.types_pb2', 'tensorboard.plugins.audio.plugin_data_pb2', 'tensorboard.util.tb_logging', 'tensorboard.plugins.audio.summary_v2', 'tensorboard.plugins.custom_scalar', 'tensorboard.plugins.custom_scalar.summary', 'tensorboard.plugins.custom_scalar.layout_pb2', 'tensorboard.plugins.custom_scalar.metadata', 'tensorboard.plugins.histogram', 'tensorboard.plugins.histogram.summary', 'tensorboard.plugins.histogram.metadata', 'tensorboard.plugins.histogram.plugin_data_pb2', 'tensorboard.plugins.histogram.summary_v2', 'tensorboard.util.tensor_util', 'tensorboard.compat.tensorflow_stub', 'tensorboard.compat.proto.config_pb2', 'tensorboard.compat.proto.cost_graph_pb2', 'tensorboard.compat.proto.graph_pb2', 'tensorboard.compat.proto.node_def_pb2', 'tensorboard.compat.proto.attr_value_pb2', 'tensorboard.compat.proto.function_pb2', 'tensorboard.compat.proto.op_def_pb2', 'tensorboard.compat.proto.versions_pb2', 'tensorboard.compat.proto.step_stats_pb2', 'tensorboard.compat.proto.allocation_description_pb2', 'tensorboard.compat.proto.tensor_description_pb2', 'tensorboard.compat.proto.cluster_pb2', 'tensorboard.compat.proto.debug_pb2', 'tensorboard.compat.proto.rewriter_config_pb2', 'tensorboard.compat.proto.verifier_config_pb2', 'tensorboard.compat.proto.event_pb2', 'tensorboard.compat.proto.meta_graph_pb2', 'google.protobuf.any_pb2', 'tensorboard.compat.proto.saved_object_graph_pb2', 'tensorboard.compat.proto.trackable_object_graph_pb2', 'tensorboard.compat.proto.struct_pb2', 'tensorboard.compat.proto.variable_pb2', 'tensorboard.compat.proto.saver_pb2', 'tensorboard.compat.tensorflow_stub.dtypes', 'tensorboard.compat.tensorflow_stub.pywrap_tensorflow', 'array', 'tensorboard.compat.tensorflow_stub.errors', 'tensorboard.compat.tensorflow_stub.error_codes', 'tensorboard.compat.tensorflow_stub.io', 'tensorboard.compat.tensorflow_stub.io.gfile', 'uuid', 'tensorboard.compat.tensorflow_stub.compat', 'tensorboard.compat.tensorflow_stub.compat.v1', 'tensorboard.compat.tensorflow_stub.app', 'tensorboard.compat.tensorflow_stub.flags', 'absl', 'absl.flags', 'getopt', 'absl.flags._argument_parser', 'csv', '_csv', 'absl.flags._helpers', 'six.moves', 'absl.flags._defines', 'absl.flags._exceptions', 'absl.flags._flag', 'absl._collections_abc', 'absl.flags._flagvalues', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'absl.flags._validators', 'tensorboard.compat.tensorflow_stub.tensor_shape', 'tensorboard.plugins.image', 'tensorboard.plugins.image.summary', 'tensorboard.plugins.image.metadata', 'tensorboard.plugins.image.plugin_data_pb2', 'tensorboard.plugins.image.summary_v2', 'tensorboard.plugins.pr_curve', 'tensorboard.plugins.pr_curve.summary', 'tensorboard.plugins.pr_curve.metadata', 'tensorboard.plugins.pr_curve.plugin_data_pb2', 'tensorboard.plugins.scalar', 'tensorboard.plugins.scalar.summary', 'tensorboard.plugins.scalar.metadata', 'tensorboard.plugins.scalar.plugin_data_pb2', 'tensorboard.plugins.scalar.summary_v2', 'tensorboard.plugins.text', 'tensorboard.plugins.text.summary', 'tensorboard.plugins.text.metadata', 'tensorboard.plugins.text.plugin_data_pb2', 'tensorboard.plugins.text.summary_v2', 'tensorboard.summary.v2', 'tensorboard.summary.writer', 'tensorboard.summary.writer.record_writer', 'torch.utils.tensorboard.writer', 'tensorboard.summary.writer.event_file_writer', 'torch.utils.tensorboard._convert_np', 'caffe2', 'caffe2.python', 'caffe2.proto', 'caffe2.proto.caffe2_pb2', 'caffe2.proto.metanet_pb2', 'caffe2.proto.torch_pb2', 'caffe2.python.workspace', 'past', 'future', 'past.builtins', 'future.utils', 'past.builtins.noniterators', 'past.types', 'past.utils', 'past.types.basestring', 'past.types.olddict', 'past.types.oldstr', 'past.builtins.misc', 'caffe2.python.scope', 'caffe2.python.utils', 'caffe2.python.compatibility', 'google.protobuf.text_format', 'encodings.raw_unicode_escape', 'encodings.unicode_escape', 'google.protobuf.internal.decoder', 'google.protobuf.internal.encoder', 'google.protobuf.internal.wire_format', 'google.protobuf.internal.type_checkers', 'caffe2.python._import_c_extension', 'caffe2.python.extension_loader', 'caffe2.python.caffe2_pybind11_state_gpu', 'torch.utils.tensorboard._embedding', 'torch.utils.tensorboard._utils', 'torch.utils.tensorboard._onnx_graph', 'torch.utils.tensorboard._pytorch_graph', 'torch.utils.tensorboard._proto_graph', 'torch.utils.tensorboard.summary', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'anytree', 'anytree.search', 'anytree.iterators', 'anytree.iterators.abstractiter', 'anytree.iterators.levelordergroupiter', 'anytree.iterators.levelorderiter', 'anytree.iterators.postorderiter', 'anytree.iterators.preorderiter', 'anytree.iterators.zigzaggroupiter', 'anytree.node', 'anytree.node.anynode', 'anytree.node.nodemixin', 'anytree.node.exceptions', 'anytree.node.util', 'anytree.node.node', 'anytree.node.symlinknode', 'anytree.node.symlinknodemixin', 'anytree.render', 'anytree.resolver', 'anytree.walker', 'anytree.cachedsearch', 'fastcache', 'fastcache._lrucache', 'anytree.util', 'anytree.exporter', 'anytree.exporter.dictexporter', 'anytree.exporter.jsonexporter', 'anytree.exporter.dotexporter', 'anytree.importer', 'anytree.importer.dictimporter', 'anytree.importer.jsonimporter', 'spectral_net', 'myModules', 'myFunctionals', 'sampler', 'generator', 'hilbert', 'sympy', 'mpmath', 'mpmath.usertools', 'mpmath.ctx_fp', 'mpmath.ctx_base', 'mpmath.libmp', 'mpmath.libmp.libmpf', 'mpmath.libmp.backend', 'mpmath.libmp.six', 'mpmath.libmp.six.moves', 'mpmath.libmp.libintmath', 'mpmath.libmp.libmpc', 'mpmath.libmp.libelefun', 'mpmath.libmp.libhyper', 'mpmath.libmp.gammazeta', 'mpmath.libmp.libmpi', 'mpmath.functions', 'mpmath.functions.functions', 'cmath', 'mpmath.functions.factorials', 'mpmath.functions.hypergeometric', 'mpmath.functions.expintegrals', 'mpmath.functions.bessel', 'mpmath.functions.orthogonal', 'mpmath.functions.theta', 'mpmath.functions.elliptic', 'mpmath.functions.zeta', 'mpmath.functions.rszeta', 'mpmath.functions.zetazeros', 'mpmath.functions.qfunctions', 'mpmath.calculus', 'mpmath.calculus.calculus', 'mpmath.calculus.approximation', 'mpmath.calculus.differentiation', 'mpmath.calculus.extrapolation', 'mpmath.calculus.polynomials', 'mpmath.calculus.quadrature', 'mpmath.calculus.inverselaplace', 'mpmath.calculus.optimization', 'mpmath.calculus.odes', 'mpmath.matrices', 'mpmath.matrices.eigen', 'mpmath.matrices.eigen_symmetric', 'mpmath.matrices.matrices', 'mpmath.matrices.calculus', 'mpmath.matrices.linalg', 'mpmath.identification', 'mpmath.visualization', 'colorsys', 'mpmath.math2', 'mpmath.function_docs', 'mpmath.ctx_mp', 'mpmath.rational', 'mpmath.ctx_mp_python', 'mpmath.ctx_iv', 'sympy.release', 'sympy.core', 'sympy.core.sympify', 'sympy.core.core', 'sympy.core.compatibility', 'sympy.external', 'sympy.external.importtools', 'distutils', 'distutils.version', 'sympy.core.evaluate', 'sympy.core.cache', 'sympy.core.basic', 'sympy.core.assumptions', 'sympy.core.facts', 'sympy.core.logic', 'sympy.core.singleton', 'sympy.core.expr', 'sympy.core.evalf', 'sympy.utilities', 'sympy.utilities.iterables', 'sympy.utilities.enumerative', 'sympy.utilities.misc', 'sympy.utilities.lambdify', 'sympy.utilities.decorator', 'sympy.core.decorators', 'sympy.utilities.runtests', 'pdb', 'cmd', 'bdb', 'code', 'codeop', 'timeit', 'doctest', 'sympy.utilities.exceptions', 'sympy.utilities.source', 'sympy.utilities.timeutils', 'sympy.core.mul', 'sympy.core.operations', 'sympy.core.numbers', 'fractions', 'sympy.core.containers', 'sympy.core.power', 'sympy.core.function', 'sympy.core.add', 'sympy.core.rules', 'sympy.core.symbol', 'sympy.logic', 'sympy.logic.boolalg', 'sympy.logic.inference', 'sympy.core.mod', 'sympy.core.exprtools', 'sympy.core.coreerrors', 'sympy.core.relational', 'sympy.core.multidimensional', 'sympy.assumptions', 'sympy.assumptions.assume', 'sympy.assumptions.ask', 'sympy.assumptions.ask_generated', 'sympy.assumptions.refine', 'sympy.polys', 'sympy.polys.polytools', 'sympy.polys.polyoptions', 'sympy.polys.polyerrors', 'sympy.polys.constructor', 'sympy.polys.domains', 'sympy.polys.domains.domain', 'sympy.polys.domains.domainelement', 'sympy.polys.orderings', 'sympy.polys.polyutils', 'sympy.polys.domains.finitefield', 'sympy.polys.domains.field', 'sympy.polys.domains.ring', 'sympy.polys.domains.groundtypes', 'sympy.polys.domains.pythonrational', 'sympy.printing', 'sympy.printing.pretty', 'sympy.printing.pretty.pretty', 'sympy.printing.conventions', 'sympy.printing.precedence', 'sympy.printing.printer', 'sympy.printing.str', 'sympy.printing.pretty.stringpict', 'sympy.printing.pretty.pretty_symbology', 'unicodedata', 'sympy.core.alphabets', 'sympy.printing.latex', 'sympy.printing.mathml', 'sympy.printing.python', 'sympy.printing.repr', 'sympy.printing.pycode', 'sympy.printing.codeprinter', 'sympy.codegen', 'sympy.codegen.ast', 'sympy.printing.ccode', 'sympy.sets', 'sympy.sets.sets', 'sympy.sets.contains', 'sympy.sets.fancysets', 'sympy.sets.conditionset', 'sympy.sets.ordinals', 'sympy.printing.glsl', 'sympy.printing.cxxcode', 'sympy.printing.fcode', 'sympy.codegen.fnodes', 'sympy.printing.rcode', 'sympy.printing.jscode', 'sympy.printing.julia', 'sympy.printing.mathematica', 'sympy.printing.octave', 'sympy.printing.rust', 'sympy.printing.gtk', 'sympy.printing.preview', 'sympy.printing.tree', 'sympy.printing.tableform', 'sympy.printing.dot', 'sympy.printing.defaults', 'sympy.polys.domains.modularinteger', 'sympy.polys.domains.simpledomain', 'sympy.polys.domains.integerring', 'sympy.polys.domains.characteristiczero', 'sympy.polys.domains.rationalfield', 'sympy.polys.domains.realfield', 'sympy.polys.domains.mpelements', 'sympy.polys.domains.complexfield', 'sympy.polys.domains.pythonfinitefield', 'sympy.polys.domains.pythonintegerring', 'sympy.polys.domains.gmpyfinitefield', 'sympy.polys.domains.gmpyintegerring', 'sympy.polys.domains.pythonrationalfield', 'sympy.polys.domains.gmpyrationalfield', 'sympy.polys.domains.algebraicfield', 'sympy.polys.polyclasses', 'sympy.polys.densebasic', 'sympy.polys.monomials', 'sympy.polys.densearith', 'sympy.polys.densetools', 'sympy.polys.euclidtools', 'sympy.ntheory', 'sympy.ntheory.generate', 'sympy.ntheory.primetest', 'sympy.ntheory.factor_', 'sympy.ntheory.partitions_', 'sympy.ntheory.residue_ntheory', 'sympy.ntheory.multinomial', 'sympy.ntheory.continued_fraction', 'sympy.ntheory.egyptian_fraction', 'sympy.polys.galoistools', 'sympy.polys.polyconfig', 'sympy.polys.sqfreetools', 'sympy.polys.factortools', 'sympy.polys.rootisolation', 'sympy.polys.domains.polynomialring', 'sympy.polys.domains.compositedomain', 'sympy.polys.domains.fractionfield', 'sympy.polys.domains.expressiondomain', 'sympy.polys.fglmtools', 'sympy.polys.groebnertools', 'sympy.polys.rationaltools', 'sympy.polys.polyfuncs', 'sympy.functions', 'sympy.functions.combinatorial', 'sympy.functions.combinatorial.factorials', 'sympy.functions.combinatorial.numbers', 'sympy.functions.elementary', 'sympy.functions.elementary.complexes', 'sympy.functions.elementary.exponential', 'sympy.functions.elementary.integers', 'sympy.functions.elementary.miscellaneous', 'sympy.functions.elementary.piecewise', 'sympy.functions.elementary.trigonometric', 'sympy.functions.elementary.hyperbolic', 'sympy.utilities.memoization', 'sympy.functions.special', 'sympy.functions.special.gamma_functions', 'sympy.functions.special.zeta_functions', 'sympy.functions.special.error_functions', 'sympy.functions.special.hyper', 'sympy.functions.special.tensor_functions', 'sympy.functions.special.delta_functions', 'sympy.functions.special.elliptic_integrals', 'sympy.functions.special.beta_functions', 'sympy.functions.special.mathieu_functions', 'sympy.functions.special.singularity_functions', 'sympy.functions.special.polynomials', 'sympy.polys.orthopolys', 'sympy.functions.special.bsplines', 'sympy.functions.special.bessel', 'sympy.functions.special.spherical_harmonics', 'sympy.polys.specialpolys', 'sympy.polys.rings', 'sympy.polys.compatibility', 'sympy.polys.heuristicgcd', 'sympy.utilities.magic', 'sympy.polys.numberfields', 'sympy.polys.ring_series', 'sympy.polys.rootoftools', 'sympy.polys.polyroots', 'sympy.polys.polyquinticconst', 'sympy.simplify', 'sympy.simplify.simplify', 'sympy.simplify.combsimp', 'sympy.simplify.gammasimp', 'sympy.simplify.cse_opts', 'sympy.simplify.powsimp', 'sympy.simplify.radsimp', 'sympy.simplify.sqrtdenest', 'sympy.simplify.trigsimp', 'sympy.simplify.cse_main', 'sympy.strategies', 'sympy.strategies.rl', 'sympy.strategies.util', 'sympy.strategies.traverse', 'sympy.strategies.core', 'sympy.strategies.tools', 'sympy.strategies.branch', 'sympy.strategies.branch.traverse', 'sympy.strategies.branch.core', 'sympy.strategies.branch.tools', 'sympy.strategies.tree', 'sympy.simplify.fu', 'sympy.simplify.traversaltools', 'sympy.simplify.epathtools', 'sympy.simplify.hyperexpand', 'sympy.series', 'sympy.series.order', 'sympy.series.limits', 'sympy.simplify.ratsimp', 'sympy.series.gruntz', 'sympy.series.series', 'sympy.series.approximants', 'sympy.series.residues', 'sympy.series.sequences', 'sympy.tensor', 'sympy.tensor.indexed', 'sympy.tensor.index_methods', 'sympy.tensor.array', 'sympy.tensor.array.dense_ndim_array', 'sympy.tensor.array.mutable_ndim_array', 'sympy.tensor.array.ndim_array', 'sympy.tensor.array.sparse_ndim_array', 'sympy.tensor.array.arrayop', 'sympy.series.fourier', 'sympy.series.series_class', 'sympy.series.formal', 'sympy.series.limitseq', 'sympy.printing.lambdarepr', 'sympy.polys.partfrac', 'sympy.matrices', 'sympy.matrices.common', 'sympy.matrices.dense', 'sympy.matrices.matrices', 'sympy.matrices.sparse', 'sympy.matrices.immutable', 'sympy.matrices.expressions', 'sympy.matrices.expressions.slice', 'sympy.matrices.expressions.matexpr', 'sympy.matrices.expressions.matmul', 'sympy.matrices.expressions.transpose', 'sympy.matrices.expressions.matpow', 'sympy.matrices.expressions.matadd', 'sympy.matrices.expressions.inverse', 'sympy.matrices.expressions.blockmatrix', 'sympy.matrices.expressions.trace', 'sympy.matrices.expressions.determinant', 'sympy.matrices.expressions.funcmatrix', 'sympy.matrices.expressions.adjoint', 'sympy.matrices.expressions.hadamard', 'sympy.matrices.expressions.diagonal', 'sympy.matrices.expressions.dotproduct', 'sympy.matrices.expressions.kronecker', 'sympy.polys.fields', 'sympy.concrete', 'sympy.concrete.products', 'sympy.concrete.expr_with_intlimits', 'sympy.concrete.expr_with_limits', 'sympy.concrete.summations', 'sympy.calculus', 'sympy.calculus.euler', 'sympy.calculus.singularities', 'sympy.solvers', 'sympy.solvers.solvers', 'sympy.integrals', 'sympy.integrals.integrals', 'sympy.integrals.manualintegrate', 'sympy.integrals.trigonometry', 'sympy.integrals.meijerint', 'sympy.integrals.transforms', 'sympy.solvers.inequalities', 'sympy.integrals.singularityfunctions', 'sympy.solvers.polysys', 'sympy.solvers.bivariate', 'sympy.solvers.diophantine', 'sympy.solvers.solveset', 'sympy.calculus.util', 'sympy.tensor.tensor', 'sympy.combinatorics', 'sympy.combinatorics.permutations', 'sympy.combinatorics.prufer', 'sympy.combinatorics.generators', 'sympy.combinatorics.subsets', 'sympy.combinatorics.graycode', 'sympy.combinatorics.partitions', 'sympy.combinatorics.polyhedron', 'sympy.combinatorics.perm_groups', 'sympy.combinatorics.util', 'sympy.utilities.randtest', 'sympy.combinatorics.group_constructs', 'sympy.combinatorics.named_groups', 'sympy.combinatorics.tensor_can', 'sympy.solvers.recurr', 'sympy.solvers.ode', 'sympy.solvers.pde', 'sympy.solvers.deutils', 'sympy.solvers.decompogen', 'sympy.calculus.finite_diff', 'sympy.concrete.gosper', 'sympy.discrete', 'sympy.discrete.transforms', 'sympy.discrete.convolutions', 'sympy.geometry', 'sympy.geometry.point', 'sympy.geometry.exceptions', 'sympy.geometry.entity', 'sympy.multipledispatch', 'sympy.multipledispatch.core', 'sympy.multipledispatch.dispatcher', 'sympy.multipledispatch.conflict', 'sympy.multipledispatch.utils', 'sympy.sets.handlers', 'sympy.sets.handlers.union', 'sympy.sets.handlers.intersection', 'sympy.geometry.line', 'sympy.geometry.plane', 'sympy.geometry.ellipse', 'sympy.geometry.util', 'sympy.geometry.polygon', 'sympy.geometry.curve', 'sympy.geometry.parabola', 'sympy.parsing', 'sympy.algebras', 'sympy.algebras.quaternion', 'sympy.plotting', 'sympy.plotting.plot', 'sympy.plotting.experimental_lambdify', 'sympy.plotting.textplot', 'sympy.plotting.plot_implicit', 'sympy.plotting.intervalmath', 'sympy.plotting.intervalmath.interval_arithmetic', 'sympy.plotting.intervalmath.lib_interval', 'sympy.plotting.pygletplot', 'sympy.interactive', 'sympy.interactive.printing', 'sympy.interactive.session', 'sympy.deprecated', 'sympy.deprecated.class_registry', 'tensorflow', 'tensorflow._api', 'tensorflow.python', 'tensorflow.tools', 'tensorflow.core', 'tensorflow.compiler', 'tensorflow.lite', 'tensorflow.keras', 'tensorflow.compat', 'tensorflow.summary', 'tensorflow.examples', 'tensorflow.estimator', 'tensorflow_core', 'tensorflow_core.python', 'tensorflow_core.python.pywrap_tensorflow', 'tensorflow.python.platform', 'tensorflow.python.platform.self_check', 'tensorflow.python.platform.build_info', 'tensorflow_core.python.pywrap_dlopen_global_flags', 'tensorflow.python.pywrap_tensorflow_internal', 'swig_runtime_data4', '_pywrap_tensorflow_internal', 'tensorflow.python.util', 'tensorflow.python.util.deprecation', 'tensorflow.python.platform.tf_logging', 'tensorflow.python.util.tf_export', 'tensorflow.python.util.tf_decorator', 'tensorflow.python.util.tf_stack', 'tensorflow.python.util.tf_inspect', 'tensorflow.python.util.decorator_utils', 'tensorflow.python.util.is_in_graph_mode', 'tensorflow.python.util.tf_contextlib', 'tensorflow_core.core', 'tensorflow.core.framework', 'tensorflow.core.framework.graph_pb2', 'tensorflow.core.framework.node_def_pb2', 'tensorflow.core.framework.attr_value_pb2', 'tensorflow.core.framework.tensor_pb2', 'tensorflow.core.framework.resource_handle_pb2', 'tensorflow.core.framework.tensor_shape_pb2', 'tensorflow.core.framework.types_pb2', 'tensorflow.core.framework.function_pb2', 'tensorflow.core.framework.op_def_pb2', 'tensorflow.core.framework.versions_pb2', 'tensorflow.core.framework.summary_pb2', 'tensorflow.core.protobuf', 'tensorflow.core.protobuf.meta_graph_pb2', 'tensorflow.core.protobuf.saved_object_graph_pb2', 'tensorflow.core.protobuf.trackable_object_graph_pb2', 'tensorflow.core.protobuf.struct_pb2', 'tensorflow.core.framework.variable_pb2', 'tensorflow.core.protobuf.saver_pb2', 'tensorflow.core.protobuf.config_pb2', 'tensorflow.core.framework.cost_graph_pb2', 'tensorflow.core.framework.step_stats_pb2', 'tensorflow.core.framework.allocation_description_pb2', 'tensorflow.core.framework.tensor_description_pb2', 'tensorflow.core.protobuf.cluster_pb2', 'tensorflow.core.protobuf.debug_pb2', 'tensorflow.core.protobuf.rewriter_config_pb2', 'tensorflow.core.protobuf.verifier_config_pb2', 'tensorflow.core.protobuf.tensorflow_server_pb2', 'tensorflow.core.util', 'tensorflow.core.util.event_pb2', 'tensorflow.python.framework', 'tensorflow.python.framework.framework_lib', 'tensorflow.python.framework.device', 'tensorflow_core.python.tf2', 'tensorflow.python.framework.device_spec', 'tensorflow.python.framework.ops', 'tensorflow.python.eager', 'tensorflow.python.eager.context', 'tensorflow.python.eager.executor', 'tensorflow.python.eager.monitoring', 'tensorflow.python.framework.c_api_util', 'tensorflow.core.framework.api_def_pb2', 'tensorflow.python.util.compat', 'tensorflow.python.eager.core', 'tensorflow.python.framework.errors', 'tensorflow.python.framework.errors_impl', 'tensorflow.core.lib', 'tensorflow.core.lib.core', 'tensorflow.core.lib.core.error_codes_pb2', 'tensorflow.python.framework.error_interpolation', 'tensorflow.core.protobuf.graph_debug_info_pb2', 'tensorflow.python.eager.tape', 'tensorflow.python.util.lazy_loader', 'tensorflow.python.framework.composite_tensor', 'tensorflow.python.util.nest', 'tensorflow.python.framework.dtypes', 'tensorflow.python.framework.indexed_slices', 'tensorflow.python.framework.tensor_conversion_registry', 'tensorflow.python.framework.tensor_like', 'tensorflow.python.framework.tensor_shape', 'tensorflow.python.framework.type_spec', 'tensorflow.python.framework.op_def_registry', 'tensorflow.python.framework.registry', 'tensorflow.python.framework.traceable_stack', 'tensorflow.python.framework.versions', 'tensorflow.python.ops', 'tensorflow.python.ops.control_flow_util', 'tensorflow.python.platform.app', 'absl.app', 'absl.command_name', 'absl.logging', 'getpass', 'absl.logging.converter', 'faulthandler', 'tensorflow.python.platform.flags', 'tensorflow.python.util.function_utils', 'tensorflow.python.util.lock_util', 'tensorflow.python.util.memory', 'tensorflow.python.util.object_identity', 'tensorflow.python.framework.sparse_tensor', 'tensorflow.python.framework.tensor_spec', 'tensorflow.python.framework.common_shapes', 'tensorflow.python.framework.cpp_shape_inference_pb2', 'tensorflow.python.framework.tensor_util', 'tensorflow.python.ops.gen_sparse_ops', 'tensorflow.python.eager.execute', 'tensorflow.python.framework.op_def_library', 'tensorflow.python.util.dispatch', 'tensorflow_core.tools', 'tensorflow.tools.docs', 'tensorflow.tools.docs.doc_controls', 'tensorflow.python.framework.random_seed', 'tensorflow.python.framework.importer', 'tensorflow.python.framework.function', 'tensorflow.python.framework.graph_to_function_def', 'tensorflow.python.ops.array_ops', 'tensorflow.python.compat', 'tensorflow.python.compat.compat', 'tensorflow.python.framework.constant_op', 'tensorflow.python.ops.gen_array_ops', 'tensorflow.python.ops.gen_math_ops', 'tensorflow.python.ops.resource_variable_ops', 'tensorflow.python.ops.gen_logging_ops', 'tensorflow.python.ops.gen_resource_variable_ops', 'tensorflow.python.ops.gen_state_ops', 'tensorflow.python.ops.math_ops', 'tensorflow.python.framework.graph_util', 'tensorflow.python.framework.graph_util_impl', 'tensorflow.python.ops.gen_data_flow_ops', 'tensorflow.python.ops.gen_nn_ops', 'tensorflow.python.ops.state_ops', 'tensorflow.python.ops.variables', 'tensorflow.python.ops.control_flow_ops', 'tensorflow.core.protobuf.control_flow_pb2', 'tensorflow.python.ops.gen_control_flow_ops', 'tensorflow.python.ops.tensor_array_ops', 'tensorflow.python.ops.list_ops', 'tensorflow.python.ops.gen_list_ops', 'tensorflow.python.util.tf_should_use', 'tensorflow.python.training', 'tensorflow.python.training.tracking', 'tensorflow.python.training.tracking.base', 'tensorflow.python.ops.gen_io_ops', 'tensorflow.python.training.saving', 'tensorflow.python.training.saving.saveable_object', 'tensorflow.python.ops.variable_scope', 'tensorflow.python.ops.init_ops', 'tensorflow.python.ops.gen_linalg_ops', 'tensorflow.python.ops.linalg_ops_impl', 'tensorflow.python.ops.random_ops', 'tensorflow.python.ops.gen_random_ops', 'tensorflow.python.framework.load_library', 'tensorflow.python.lib', 'tensorflow.python.lib.io', 'tensorflow.python.lib.io.file_io', 'tensorflow.python.framework.config', 'tensorflow.python.client', 'tensorflow.python.client.client_lib', 'tensorflow.python.client.session', 'tensorflow.python.ops.session_ops', 'tensorflow.python.training.experimental', 'tensorflow.python.training.experimental.mixed_precision_global_state', 'tensorflow.python.ops.standard_ops', 'tensorflow_core.python.autograph', 'tensorflow.python.autograph', 'tensorflow.python.autograph.operators', 'tensorflow.python.autograph.operators.control_flow', 'tensorflow.python.autograph.operators.py_builtins', 'tensorflow.python.autograph.utils', 'tensorflow.python.autograph.utils.context_managers', 'tensorflow.python.autograph.utils.misc', 'tensorflow.python.autograph.utils.py_func', 'tensorflow.python.ops.script_ops', 'tensorflow.python.eager.backprop', 'tensorflow.python.eager.imperative_grad', 'tensorflow.python.ops.unconnected_gradients', 'tensorflow.python.ops.check_ops', 'tensorflow.python.ops.gen_script_ops', 'tensorflow.python.autograph.utils.tensor_list', 'tensorflow.python.autograph.utils.testing', 'tensorflow.python.autograph.utils.type_check', 'tensorflow.python.autograph.utils.tensors', 'tensorflow.python.data', 'tensorflow.python.data.experimental', 'tensorflow.python.data.experimental.ops', 'tensorflow.python.data.experimental.ops.batching', 'tensorflow.python.data.ops', 'tensorflow.python.data.ops.dataset_ops', 'tensorflow.python.data.experimental.ops.distribute_options', 'tensorflow.python.data.util', 'tensorflow.python.data.util.options', 'tensorflow.python.data.experimental.ops.optimization_options', 'tensorflow.python.data.experimental.ops.stats_options', 'tensorflow.python.data.experimental.ops.stats_aggregator', 'tensorflow.python.ops.gen_experimental_dataset_ops', 'tensorflow.python.ops.summary_ops_v2', 'tensorflow.python.eager.profiler', 'tensorflow.python.platform.gfile', 'tensorflow.python.framework.smart_cond', 'tensorflow.python.ops.gen_summary_ops', 'tensorflow.python.ops.summary_op_util', 'tensorflow.python.training.training_util', 'tensorflow.python.framework.graph_io', 'tensorflow.python.data.experimental.ops.threading_options', 'tensorflow.python.data.ops.iterator_ops', 'tensorflow.python.data.ops.optional_ops', 'tensorflow.python.data.util.structure', 'tensorflow.python.data.util.nest', 'tensorflow.python.ops.ragged', 'tensorflow.python.ops.ragged.ragged_array_ops', 'tensorflow.python.ops.sort_ops', 'tensorflow.python.ops.nn_ops', 'tensorflow.python.ops.ragged.ragged_functional_ops', 'tensorflow.python.ops.ragged.ragged_config', 'tensorflow.python.ops.ragged.ragged_tensor', 'tensorflow.python.ops.gen_ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_tensor_value', 'tensorflow.python.ops.ragged.ragged_util', 'tensorflow.python.ops.gen_ragged_math_ops', 'tensorflow.python.ops.ragged.segment_id_ops', 'tensorflow.python.ops.ragged.ragged_math_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_ops', 'tensorflow.python.ops.ragged.ragged_gather_ops', 'tensorflow.python.ops.gen_ragged_array_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_with_default_op', 'tensorflow.python.ops.ragged.ragged_dispatch', 'tensorflow.python.ops.clip_ops', 'tensorflow.python.ops.data_flow_ops', 'tensorflow.python.lib.io.python_io', 'tensorflow.python.lib.io.tf_record', 'tensorflow.python.ops.gen_bitwise_ops', 'tensorflow.python.ops.parsing_ops', 'tensorflow.python.ops.gen_parsing_ops', 'tensorflow.python.ops.sparse_ops', 'tensorflow.python.ops.string_ops', 'tensorflow.python.ops.gen_string_ops', 'tensorflow.python.ops.ragged.ragged_concat_ops', 'tensorflow.python.ops.ragged.ragged_squeeze_op', 'tensorflow.python.ops.ragged.ragged_string_ops', 'tensorflow.python.ops.ragged.ragged_tensor_shape', 'tensorflow.python.ops.ragged.ragged_where_op', 'tensorflow.python.ops.ragged.ragged_operators', 'tensorflow.python.ops.ragged.ragged_getitem', 'tensorflow.python.ops.ragged.ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_factory_ops', 'tensorflow.python.ops.ragged.ragged_map_ops', 'tensorflow.python.ops.gen_dataset_ops', 'tensorflow.python.training.saver', 'tensorflow.python.framework.meta_graph', 'tensorflow.python.ops.io_ops', 'tensorflow.python.training.checkpoint_management', 'tensorflow.python.training.checkpoint_state_pb2', 'tensorflow.python.training.saving.saveable_object_util', 'tensorflow.python.data.util.random_seed', 'tensorflow.python.data.util.sparse', 'tensorflow.python.data.util.traverse', 'tensorflow.python.eager.function', 'tensorflow.python.eager.graph_only_ops', 'tensorflow.python.framework.func_graph', 'tensorflow.python.framework.auto_control_deps', 'tensorflow.python.ops.custom_gradient', 'tensorflow.python.ops.op_selector', 'tensorflow.python.ops.default_gradient', 'tensorflow.python.ops.functional_ops', 'tensorflow.python.ops.gen_functional_ops', 'tensorflow.python.ops.gradients_util', 'tensorflow.python.ops.control_flow_state', 'tensorflow.python.training.tracking.tracking', 'tensorflow.python.eager.def_function', 'tensorflow.python.eager.lift_to_graph', 'tensorflow.python.training.tracking.data_structures', 'wrapt', 'wrapt.wrappers', 'wrapt._wrappers', 'wrapt.decorators', 'wrapt.importer', 'tensorflow.python.saved_model', 'tensorflow.python.saved_model.revived_types', 'tensorflow.python.training.tracking.layer_utils', 'tensorflow.python.data.util.convert', 'tensorflow.python.data.experimental.ops.cardinality', 'tensorflow.python.data.experimental.ops.counter', 'tensorflow.python.data.experimental.ops.scan_ops', 'tensorflow.python.data.experimental.ops.enumerate_ops', 'tensorflow.python.data.experimental.ops.error_ops', 'tensorflow.python.data.experimental.ops.get_single_element', 'tensorflow.python.data.experimental.ops.grouping', 'tensorflow.python.data.experimental.ops.interleave_ops', 'tensorflow.python.data.experimental.ops.random_ops', 'tensorflow.python.data.ops.readers', 'tensorflow.python.ops.gen_stateless_random_ops', 'tensorflow.python.data.experimental.ops.iterator_ops', 'tensorflow.python.training.basic_session_run_hooks', 'tensorflow.python.client.timeline', 'tensorflow.python.training.session_run_hook', 'tensorflow.python.training.summary_io', 'tensorflow.python.summary', 'tensorflow.python.summary.summary_iterator', 'tensorflow.python.summary.writer', 'tensorflow.python.summary.writer.writer', 'tensorflow.python.summary.plugin_asset', 'tensorflow.python.summary.writer.event_file_writer', 'tensorflow.python.summary.writer.event_file_writer_v2', 'tensorflow.python.summary.writer.writer_cache', 'tensorflow.python.data.experimental.ops.parsing_ops', 'tensorflow.python.data.experimental.ops.prefetching_ops', 'tensorflow.python.data.experimental.ops.readers', 'gzip', 'tensorflow.python.data.experimental.ops.shuffle_ops', 'tensorflow.python.data.experimental.ops.resampling', 'tensorflow.python.ops.logging_ops', 'tensorflow.python.data.experimental.ops.stats_ops', 'tensorflow.python.data.experimental.ops.take_while_ops', 'tensorflow.python.data.experimental.ops.unique', 'tensorflow.python.data.experimental.ops.writers', 'tensorflow.python.util.all_util', 'tensorflow.python.autograph.operators.special_values', 'tensorflow.python.autograph.utils.ag_logging', 'tensorflow.python.autograph.operators.data_structures', 'tensorflow.python.autograph.operators.exceptions', 'tensorflow.python.autograph.operators.logical', 'tensorflow.python.autograph.operators.slices', 'tensorflow.python.autograph.core', 'tensorflow.python.autograph.core.converter', 'tensorflow.python.autograph.pyct', 'tensorflow.python.autograph.pyct.anno', 'gast', 'gast.gast', 'gast.ast3', 'gast.astn', 'tensorflow.python.autograph.pyct.ast_util', 'tensorflow.python.autograph.pyct.parser', 'tensorflow.python.autograph.pyct.inspect_utils', 'tensorflow.python.autograph.pyct.cfg', 'tensorflow.python.autograph.pyct.compiler', 'astor', 'astor.code_gen', 'astor.op_util', 'astor.node_util', 'astor.string_repr', 'astor.source_repr', 'astor.file_util', 'astor.tree_walk', 'tensorflow.python.autograph.pyct.origin_info', 'tensorflow.python.autograph.pyct.pretty_printer', 'termcolor', 'tensorflow.python.autograph.pyct.qual_names', 'tensorflow.python.autograph.pyct.templates', 'tensorflow.python.autograph.pyct.transformer', 'tensorflow.python.autograph.pyct.static_analysis', 'tensorflow.python.autograph.pyct.static_analysis.activity', 'tensorflow.python.autograph.pyct.static_analysis.annos', 'tensorflow.python.autograph.pyct.static_analysis.liveness', 'tensorflow.python.autograph.pyct.static_analysis.reaching_definitions', 'tensorflow.python.autograph.impl', 'tensorflow.python.autograph.impl.api', 'tensorflow.python.autograph.core.ag_ctx', 'tensorflow.python.autograph.impl.conversion', 'tensorflow.python.autograph.converters', 'tensorflow.python.autograph.converters.arg_defaults', 'tensorflow.python.autograph.converters.asserts', 'tensorflow.python.autograph.converters.break_statements', 'tensorflow.python.autograph.converters.call_trees', 'tensorflow.python.autograph.converters.conditional_expressions', 'tensorflow.python.autograph.converters.continue_statements', 'tensorflow.python.autograph.converters.control_flow', 'tensorflow.python.autograph.converters.directives', 'tensorflow.python.autograph.lang', 'tensorflow.python.autograph.lang.directives', 'tensorflow.python.autograph.converters.function_scopes', 'tensorflow.python.autograph.converters.lists', 'tensorflow.python.autograph.converters.logical_expressions', 'tensorflow.python.autograph.converters.return_statements', 'tensorflow.python.autograph.converters.slices', 'tensorflow.python.autograph.core.config', 'tensorflow.python.autograph.core.config_lib', 'tensorflow.python.autograph.core.function_wrappers', 'tensorflow.python.autograph.core.naming', 'tensorflow.python.autograph.core.unsupported_features_checker', 'tensorflow.python.autograph.lang.special_functions', 'tensorflow.python.autograph.pyct.errors', 'tensorflow.python.ops.array_grad', 'tensorflow.python.ops.cudnn_rnn_grad', 'tensorflow.python.ops.gen_cudnn_rnn_ops', 'tensorflow.python.ops.data_flow_grad', 'tensorflow.python.ops.manip_grad', 'tensorflow.python.ops.manip_ops', 'tensorflow.python.ops.gen_manip_ops', 'tensorflow.python.ops.math_grad', 'tensorflow.python.ops.random_grad', 'tensorflow.python.ops.rnn_grad', 'tensorflow.python.ops.gen_rnn_ops', 'tensorflow.python.ops.sparse_grad', 'tensorflow.python.ops.state_grad', 'tensorflow.python.ops.tensor_array_grad', 'tensorflow.python.ops.special_math_ops', 'tensorflow_core.compiler', 'tensorflow.compiler.tf2xla', 'tensorflow.compiler.tf2xla.ops', 'tensorflow.compiler.tf2xla.ops.gen_xla_ops', 'tensorflow.python.ops.confusion_matrix', 'tensorflow.python.eager.wrap_function', 'tensorflow.python.ops.batch_ops', 'tensorflow.python.ops.gen_batch_ops', 'tensorflow.python.ops.critical_section_ops', 'tensorflow.python.ops.gradients', 'tensorflow.python.ops.gradients_impl', 'tensorflow.python.ops.control_flow_grad', 'tensorflow.python.ops.image_grad', 'tensorflow.python.ops.gen_image_ops', 'tensorflow.python.ops.linalg_grad', 'tensorflow.python.ops.linalg_ops', 'tensorflow.python.ops.map_fn', 'tensorflow.python.ops.linalg', 'tensorflow.python.ops.linalg.linalg_impl', 'tensorflow.python.ops.optional_grad', 'tensorflow.python.ops.histogram_ops', 'tensorflow.python.ops.lookup_ops', 'tensorflow.python.ops.gen_lookup_ops', 'tensorflow.python.ops.numerics', 'tensorflow.python.ops.partitioned_variables', 'tensorflow.python.ops.proto_ops', 'tensorflow.python.ops.gen_decode_proto_ops', 'tensorflow.python.ops.gen_encode_proto_ops', 'tensorflow.python.ops.stateless_random_ops', 'tensorflow.python.ops.template', 'tensorflow.python.training.tracking.util', 'tensorflow.python.training.saving.functional_saver', 'tensorflow.python.training.tracking.graph_view', 'tensorflow.python.training.optimizer', 'tensorflow.python.distribute', 'tensorflow.python.distribute.cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.cluster_resolver', 'tensorflow.python.training.server_lib', 'tensorflow.python.distribute.cluster_resolver.gce_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.kubernetes_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.slurm_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tfconfig_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tpu_cluster_resolver', 'six.moves.urllib', 'six.moves.urllib.error', 'six.moves.urllib.request', 'tensorflow.python.distribute.cross_device_ops', 'tensorflow.python.client.device_lib', 'tensorflow.core.framework.device_attributes_pb2', 'tensorflow.python.distribute.cross_device_utils', 'tensorflow.python.distribute.all_reduce', 'tensorflow.python.ops.nccl_ops', 'tensorflow.python.ops.gen_nccl_ops', 'tensorflow.python.distribute.values', 'tensorflow.python.distribute.device_util', 'tensorflow.python.distribute.distribute_lib', 'tensorflow.python.distribute.distribution_strategy_context', 'tensorflow.python.distribute.numpy_dataset', 'tensorflow.python.distribute.reduce_util', 'tensorflow.python.ops.losses', 'tensorflow.python.ops.losses.loss_reduction', 'tensorflow.python.ops.losses.losses_impl', 'tensorflow.python.ops.nn', 'tensorflow.python.ops.ctc_ops', 'tensorflow.python.ops.gen_ctc_ops', 'tensorflow.python.ops.inplace_ops', 'tensorflow.python.ops.nn_grad', 'tensorflow.python.ops.embedding_ops', 'tensorflow.python.ops.nn_impl', 'tensorflow.python.ops.candidate_sampling_ops', 'tensorflow.python.ops.gen_candidate_sampling_ops', 'tensorflow.python.ops.losses.util', 'tensorflow.python.ops.weights_broadcast_ops', 'tensorflow.python.ops.sets', 'tensorflow.python.ops.sets_impl', 'tensorflow.python.ops.gen_set_ops', 'tensorflow.python.ops.collective_ops', 'tensorflow.python.ops.gen_collective_ops', 'tensorflow.python.framework.kernels', 'tensorflow.core.framework.kernel_def_pb2', 'tensorflow.python.distribute.mirrored_strategy', 'tensorflow.python.distribute.input_lib', 'tensorflow.python.data.experimental.ops.distribute', 'tensorflow.python.data.ops.multi_device_iterator_ops', 'tensorflow.python.distribute.input_ops', 'tensorflow.python.distribute.multi_worker_util', 'tensorflow.python.distribute.distribute_coordinator_context', 'tensorflow.python.distribute.shared_variable_creator', 'tensorflow.python.training.coordinator', 'tensorflow.python.distribute.one_device_strategy', 'tensorflow.python.distribute.experimental', 'tensorflow.python.distribute.central_storage_strategy', 'tensorflow.python.distribute.parameter_server_strategy', 'tensorflow.python.training.device_setter', 'tensorflow.python.distribute.collective_all_reduce_strategy', 'tensorflow.python.distribute.tpu_strategy', 'tensorflow.python.tpu', 'tensorflow.python.tpu.device_assignment', 'tensorflow.python.tpu.topology', 'tensorflow.core.protobuf.tpu', 'tensorflow.core.protobuf.tpu.topology_pb2', 'tensorflow.python.tpu.tpu', 'tensorflow.core.protobuf.tpu.dynamic_padding_pb2', 'tensorflow.python.compiler', 'tensorflow.python.compiler.xla', 'tensorflow.python.compiler.xla.jit', 'tensorflow.python.compiler.xla.xla', 'tensorflow.compiler.jit', 'tensorflow.compiler.jit.ops', 'tensorflow.compiler.jit.ops.xla_ops', 'tensorflow.compiler.jit.ops.xla_ops_grad', 'tensorflow.python.distribute.summary_op_util', 'tensorflow.python.tpu.tpu_function', 'tensorflow.python.tpu.ops', 'tensorflow.python.tpu.ops.tpu_ops', 'tensorflow.python.ops.gen_tpu_ops', 'tensorflow.python.tpu.tpu_strategy_util', 'tensorflow.python.tpu.tpu_system_metadata', 'tensorflow.python.tpu.training_loop', 'tensorflow.python.tpu.tensor_tracer', 'tensorflow.python.tpu.tensor_tracer_flags', 'tensorflow.python.tpu.tensor_tracer_report', 'tensorflow.python.tpu.tensor_tracer_pb2', 'tensorflow.python.training.slot_creator', 'tensorflow.python.ops.parallel_for', 'tensorflow.python.ops.parallel_for.control_flow_ops', 'tensorflow.python.ops.parallel_for.pfor', 'tensorflow.python.ops.bitwise_ops', 'tensorflow.python.ops.parallel_for.gradients', 'tensorflow.python.ops.initializers_ns', 'tensorflow_core.python.keras', 'tensorflow.python.keras', 'tensorflow.python.keras.activations', 'tensorflow.python.keras.backend', 'tensorflow.python.distribute.distribute_coordinator', 'tensorflow.python.training.monitored_session', 'tensorflow.python.ops.resources', 'tensorflow.python.summary.summary', 'google.protobuf.json_format', 'tensorflow.python.training.queue_runner', 'tensorflow.python.training.queue_runner_impl', 'tensorflow.core.protobuf.queue_runner_pb2', 'tensorflow.python.training.session_manager', 'tensorflow.python.keras.backend_config', 'tensorflow.python.ops.image_ops', 'tensorflow.python.ops.image_ops_impl', 'tensorflow.python.keras.utils', 'tensorflow.python.keras.utils.data_utils', 'multiprocessing.pool', 'tensorflow.python.keras.utils.generic_utils', 'tensorflow.python.keras.utils.io_utils', 'h5py', 'h5py._errors', 'h5py._hl', 'h5py._hl.compat', 'h5py._conv', 'h5py.h5r', 'h5py._objects', '_cython_0_29_2', 'h5py.defs', 'h5py.h5t', 'h5py.utils', 'h5py.h5', 'h5py.h5py_warnings', 'h5py.h5z', 'h5py.h5a', 'h5py.h5s', 'h5py.h5p', 'h5py.h5ac', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py._hl.filters', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py.version', 'h5py._hl.attrs', 'tensorflow.python.keras.utils.layer_utils', 'tensorflow.python.keras.utils.conv_utils', 'tensorflow.python.keras.utils.multi_gpu_utils', 'tensorflow.python.keras.engine', 'tensorflow.python.keras.engine.base_layer', 'tensorflow.python.keras.constraints', 'tensorflow.python.keras.initializers', 'tensorflow.python.ops.init_ops_v2', 'tensorflow.python.keras.regularizers', 'tensorflow.python.keras.engine.base_layer_utils', 'tensorflow.python.ops.control_flow_v2_func_graphs', 'tensorflow.python.keras.engine.input_spec', 'tensorflow.python.keras.engine.node', 'tensorflow.python.keras.mixed_precision', 'tensorflow.python.keras.mixed_precision.experimental', 'tensorflow.python.keras.mixed_precision.experimental.loss_scale_optimizer', 'tensorflow.python.keras.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.learning_rate_schedule', 'tensorflow.python.keras.utils.tf_utils', 'tensorflow.python.training.experimental.loss_scale', 'tensorflow.python.keras.mixed_precision.experimental.policy', 'tensorflow.python.keras.mixed_precision.experimental.autocast_variable', 'tensorflow.python.keras.saving', 'tensorflow.python.keras.saving.hdf5_format', 'tensorflow.python.keras.optimizers', 'tensorflow.python.keras.optimizer_v2.adadelta', 'tensorflow.python.training.training_ops', 'tensorflow.python.training.gen_training_ops', 'tensorflow.python.keras.optimizer_v2.adagrad', 'tensorflow.python.keras.optimizer_v2.adam', 'tensorflow.python.keras.optimizer_v2.adamax', 'tensorflow.python.keras.optimizer_v2.ftrl', 'tensorflow.python.keras.optimizer_v2.gradient_descent', 'tensorflow.python.keras.optimizer_v2.nadam', 'tensorflow.python.keras.optimizer_v2.rmsprop', 'tensorflow.python.keras.saving.model_config', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.cyaml', '_yaml', 'tensorflow.python.keras.saving.saving_utils', 'tensorflow.python.keras.losses', 'tensorflow.python.keras.utils.losses_utils', 'tensorflow.python.util.serialization', 'tensorflow.python.keras.saving.save', 'tensorflow.python.keras.saving.saved_model', 'tensorflow.python.keras.saving.saved_model.load', 'tensorflow.python.keras.saving.saved_model.constants', 'tensorflow.python.keras.saving.saved_model.utils', 'tensorflow.python.keras.saving.saved_model.serialized_attributes', 'tensorflow.python.saved_model.load', 'tensorflow.python.saved_model.function_deserialization', 'tensorflow.python.framework.function_def_to_graph', 'tensorflow.python.saved_model.nested_structure_coder', 'tensorflow.python.saved_model.load_v1_in_v2', 'tensorflow.python.saved_model.loader_impl', 'tensorflow.core.protobuf.saved_model_pb2', 'tensorflow.python.saved_model.constants', 'tensorflow.python.saved_model.signature_def_utils', 'tensorflow.python.saved_model.signature_def_utils_impl', 'tensorflow.python.saved_model.signature_constants', 'tensorflow.python.saved_model.utils_impl', 'tensorflow.python.saved_model.signature_serialization', 'tensorflow.python.keras.saving.saved_model.save', 'tensorflow.python.keras.saving.saved_model.save_impl', 'tensorflow.python.saved_model.save', 'tensorflow.python.saved_model.builder_impl', 'tensorflow.python.saved_model.function_serialization', 'tensorflow.python.saved_model.save_options', 'tensorflow.python.saved_model.tag_constants', 'tensorflow.python.keras.saving.saved_model_experimental', 'tensorflow.python.keras.utils.mode_keys', 'tensorflow.python.saved_model.model_utils', 'tensorflow.python.saved_model.model_utils.export_output', 'tensorflow.python.saved_model.model_utils.export_utils', 'tensorflow.python.saved_model.model_utils.mode_keys', 'tensorflow.python.saved_model.builder', 'tensorflow.python.keras.saving.saved_model.layer_serialization', 'tensorflow.python.keras.saving.saved_model.base_serialization', 'tensorflow.python.module', 'tensorflow.python.module.module', 'tensorflow.python.keras.engine.input_layer', 'tensorflow.python.keras.distribute', 'tensorflow.python.keras.distribute.distributed_training_utils', 'tensorflow.python.keras.callbacks', 'tensorflow.python.keras.distribute.multi_worker_training_state', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'hmac', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'mimetypes', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'urllib3.contrib.pyopenssl', 'OpenSSL', 'OpenSSL.crypto', 'cryptography', 'cryptography.__about__', 'cryptography.x509', 'cryptography.x509.certificate_transparency', 'cryptography.x509.base', 'cryptography.utils', 'cryptography.hazmat', 'cryptography.hazmat.primitives', 'cryptography.hazmat.primitives.asymmetric', 'cryptography.hazmat.primitives.asymmetric.dsa', 'cryptography.hazmat.primitives.asymmetric.ec', 'cryptography.hazmat._oid', 'cryptography.hazmat.primitives.asymmetric.rsa', 'cryptography.exceptions', 'cryptography.hazmat.backends', 'cryptography.hazmat.backends.interfaces', 'cryptography.x509.extensions', 'ipaddress', 'asn1crypto', 'asn1crypto.version', 'asn1crypto.keys', 'asn1crypto._elliptic_curve', 'asn1crypto._int', 'asn1crypto.util', 'asn1crypto._errors', 'asn1crypto._iri', 'encodings.idna', 'stringprep', 'asn1crypto._types', 'asn1crypto._ordereddict', 'asn1crypto._inet', 'asn1crypto._ffi', 'asn1crypto._perf', 'ctypes.util', 'asn1crypto.algos', 'asn1crypto.core', 'asn1crypto._teletex_codec', 'asn1crypto.parser', 'cryptography.hazmat.primitives.constant_time', 'cryptography.hazmat.bindings', '_cffi_backend', '_constant_time.lib', '_constant_time', 'cryptography.hazmat.bindings._constant_time', 'cryptography.hazmat.primitives.serialization', 'cryptography.hazmat.primitives.serialization.base', 'cryptography.hazmat.primitives.serialization.ssh', 'cryptography.hazmat.primitives.asymmetric.ed25519', 'cryptography.x509.general_name', 'cryptography.x509.name', 'cryptography.x509.oid', 'cryptography.hazmat.primitives.hashes', 'OpenSSL._util', 'cryptography.hazmat.bindings.openssl', 'cryptography.hazmat.bindings.openssl.binding', '_openssl.lib', '_openssl', 'cryptography.hazmat.bindings._openssl', 'cryptography.hazmat.bindings.openssl._conditional', 'OpenSSL.SSL', 'OpenSSL.version', 'cryptography.hazmat.backends.openssl', 'cryptography.hazmat.backends.openssl.backend', 'cryptography.hazmat.backends.openssl.aead', 'cryptography.hazmat.backends.openssl.ciphers', 'cryptography.hazmat.primitives.ciphers', 'cryptography.hazmat.primitives.ciphers.base', 'cryptography.hazmat.primitives.ciphers.modes', 'cryptography.hazmat.backends.openssl.cmac', 'cryptography.hazmat.backends.openssl.decode_asn1', 'cryptography.hazmat.backends.openssl.dh', 'cryptography.hazmat.primitives.asymmetric.dh', 'cryptography.hazmat.backends.openssl.dsa', 'cryptography.hazmat.backends.openssl.utils', 'cryptography.hazmat.primitives.asymmetric.utils', 'cryptography.hazmat.backends.openssl.ec', 'cryptography.hazmat.backends.openssl.ed25519', 'cryptography.hazmat.backends.openssl.ed448', 'cryptography.hazmat.primitives.asymmetric.ed448', 'cryptography.hazmat.backends.openssl.encode_asn1', 'cryptography.hazmat.backends.openssl.hashes', 'cryptography.hazmat.backends.openssl.hmac', 'cryptography.hazmat.backends.openssl.ocsp', 'cryptography.hazmat.backends.openssl.x509', 'cryptography.x509.ocsp', 'cryptography.hazmat.backends.openssl.poly1305', 'cryptography.hazmat.backends.openssl.rsa', 'cryptography.hazmat.primitives.asymmetric.padding', 'cryptography.hazmat.backends.openssl.x25519', 'cryptography.hazmat.primitives.asymmetric.x25519', 'cryptography.hazmat.backends.openssl.x448', 'cryptography.hazmat.primitives.asymmetric.x448', 'cryptography.hazmat.primitives.ciphers.algorithms', 'cryptography.hazmat.primitives.kdf', 'cryptography.hazmat.primitives.kdf.scrypt', 'urllib3.packages.backports', 'urllib3.packages.backports.makefile', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'requests._internal_utils', 'requests.compat', 'http.cookiejar', 'http.cookies', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3.contrib.pyopenssl', 'requests.packages.urllib3.packages.backports', 'requests.packages.urllib3.packages.backports.makefile', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'urllib3.contrib.socks', 'socks', 'tensorflow.python.keras.metrics', 'tensorflow.python.keras.utils.metrics_utils', 'tensorflow.python.keras.engine.training_utils', 'tensorflow.python.framework.composite_tensor_utils', 'tensorflow.python.keras.engine.training', 'tensorflow.python.keras.engine.data_adapter', 'tensorflow.python.keras.engine.network', 'tensorflow.python.keras.saving.saved_model.network_serialization', 'tensorflow.python.keras.engine.training_arrays', 'scipy', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib._version', 'scipy._lib.six', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.sparse', 'scipy.sparse.base', 'scipy._lib._numpy_compat', 'scipy.sparse.sputils', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy._lib._util', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', '_cython_0_29_5', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._reordering', 'tensorflow.python.keras.engine.training_distributed', 'tensorflow.python.keras.engine.partial_batch_padding_handler', 'tensorflow.python.keras.engine.training_eager', 'tensorflow.python.keras.engine.training_generator', 'tensorflow.python.keras.engine.training_v2', 'tensorflow.python.keras.engine.training_v2_utils', 'tensorflow.python.keras.saving.saved_model.model_serialization', 'tensorflow.python.keras.utils.np_utils', 'tensorflow.python.keras.utils.vis_utils', 'tensorflow.python.keras.applications', 'keras_applications', 'keras_applications.vgg16', 'keras_applications.imagenet_utils', 'keras_applications.vgg19', 'keras_applications.resnet50', 'keras_applications.inception_v3', 'keras_applications.inception_resnet_v2', 'keras_applications.xception', 'keras_applications.mobilenet', 'keras_applications.mobilenet_v2', 'keras_applications.densenet', 'keras_applications.nasnet', 'keras_applications.resnet', 'keras_applications.resnet_common', 'keras_applications.resnet_v2', 'keras_applications.resnext', 'tensorflow.python.keras.layers', 'tensorflow.python.keras.layers.advanced_activations', 'tensorflow.python.keras.layers.convolutional', 'tensorflow.python.keras.layers.pooling', 'tensorflow.python.keras.layers.core', 'tensorflow.python.keras.layers.dense_attention', 'tensorflow.python.keras.layers.embeddings', 'tensorflow.python.keras.layers.local', 'tensorflow.python.keras.layers.merge', 'tensorflow.python.keras.layers.noise', 'tensorflow.python.keras.layers.normalization', 'tensorflow.python.keras.layers.normalization_v2', 'tensorflow.python.keras.layers.kernelized', 'tensorflow.python.keras.layers.recurrent', 'tensorflow.python.keras.layers.recurrent_v2', 'tensorflow.python.keras.layers.convolutional_recurrent', 'tensorflow.python.keras.layers.cudnn_recurrent', 'tensorflow.python.keras.layers.wrappers', 'tensorflow.python.keras.layers.rnn_cell_wrapper_v2', 'tensorflow.python.ops.rnn_cell_wrapper_impl', 'tensorflow.python.keras.layers.serialization', 'tensorflow.python.keras.models', 'tensorflow.python.keras.engine.sequential', 'tensorflow.python.keras.applications.densenet', 'tensorflow.python.keras.applications.imagenet_utils', 'tensorflow.python.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.applications.inception_v3', 'tensorflow.python.keras.applications.mobilenet', 'tensorflow.python.keras.applications.mobilenet_v2', 'tensorflow.python.keras.applications.nasnet', 'tensorflow.python.keras.applications.resnet', 'tensorflow.python.keras.applications.resnet_v2', 'tensorflow.python.keras.applications.vgg16', 'tensorflow.python.keras.applications.vgg19', 'tensorflow.python.keras.applications.xception', 'tensorflow.python.keras.callbacks_v1', 'tensorflow.python.keras.datasets', 'tensorflow.python.keras.datasets.boston_housing', 'tensorflow.python.keras.datasets.cifar10', 'tensorflow.python.keras.datasets.cifar', 'tensorflow.python.keras.datasets.cifar100', 'tensorflow.python.keras.datasets.fashion_mnist', 'tensorflow.python.keras.datasets.imdb', 'tensorflow.python.keras.preprocessing', 'keras_preprocessing', 'tensorflow.python.keras.preprocessing.image', 'keras_preprocessing.image', 'keras_preprocessing.image.affine_transformations', 'keras_preprocessing.image.utils', 'PIL', 'PIL._version', 'PIL.ImageEnhance', 'PIL.Image', 'PIL._util', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'PIL.ImageFilter', 'PIL.ImageStat', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.linalg', 'scipy.linalg.linalg_version', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'numpy.dual', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special.basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special.lambertw', 'scipy.special._spherical_bessel', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy._lib.messagestream', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial._plotutils', 'scipy._lib.decorator', 'scipy.spatial._procrustes', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.misc.pilutil', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.io', 'keras_preprocessing.image.dataframe_iterator', 'keras_preprocessing.image.iterator', 'keras_preprocessing.image.directory_iterator', 'keras_preprocessing.image.image_data_generator', 'keras_preprocessing.image.numpy_array_iterator', 'tensorflow.python.keras.preprocessing.sequence', 'keras_preprocessing.sequence', 'tensorflow.python.keras.preprocessing.text', 'keras_preprocessing.text', 'tensorflow.python.keras.datasets.mnist', 'tensorflow.python.keras.datasets.reuters', 'tensorflow.python.keras.estimator', 'tensorflow.python.keras.ops', 'tensorflow.python.keras.premade', 'tensorflow.python.keras.premade.linear', 'tensorflow.python.keras.premade.wide_deep', 'tensorflow.python.keras.wrappers', 'tensorflow.python.keras.wrappers.scikit_learn', 'tensorflow.python.feature_column', 'tensorflow.python.feature_column.feature_column_lib', 'tensorflow.python.feature_column.dense_features_v2', 'tensorflow.python.feature_column.dense_features', 'tensorflow.python.feature_column.feature_column_v2', 'tensorflow.python.feature_column.feature_column', 'tensorflow.python.feature_column.utils', 'tensorflow.python.layers', 'tensorflow.python.layers.base', 'tensorflow.python.training.checkpoint_utils', 'tensorflow.python.feature_column.sequence_feature_column', 'tensorflow.python.feature_column.serialization', 'tensorflow.python.layers.layers', 'tensorflow.python.layers.core', 'tensorflow.python.layers.convolutional', 'tensorflow.python.layers.pooling', 'tensorflow.python.layers.normalization', 'tensorflow.python.ops.gradient_checker_v2', 'tensorflow.python.ops.metrics', 'tensorflow.python.ops.metrics_impl', 'tensorflow.python.ops.stateful_random_ops', 'tensorflow.python.ops.gen_stateful_random_ops', 'tensorflow.python.ops.distributions', 'tensorflow.python.ops.distributions.distributions', 'tensorflow.python.ops.distributions.bernoulli', 'tensorflow.python.ops.distributions.distribution', 'tensorflow.python.ops.distributions.kullback_leibler', 'tensorflow.python.ops.distributions.util', 'tensorflow.python.ops.distributions.beta', 'tensorflow.python.ops.distributions.categorical', 'tensorflow.python.ops.distributions.dirichlet', 'tensorflow.python.ops.distributions.dirichlet_multinomial', 'tensorflow.python.ops.distributions.exponential', 'tensorflow.python.ops.distributions.gamma', 'tensorflow.python.ops.distributions.laplace', 'tensorflow.python.ops.distributions.special_math', 'tensorflow.python.ops.distributions.multinomial', 'tensorflow.python.ops.distributions.normal', 'tensorflow.python.ops.distributions.student_t', 'tensorflow.python.ops.distributions.uniform', 'tensorflow.python.ops.linalg.linalg', 'tensorflow.python.ops.linalg.adjoint_registrations', 'tensorflow.python.ops.linalg.linear_operator', 'tensorflow.python.ops.linalg.linear_operator_algebra', 'tensorflow.python.ops.linalg.linear_operator_util', 'tensorflow.python.ops.linalg.linear_operator_adjoint', 'tensorflow.python.ops.linalg.linear_operator_block_diag', 'tensorflow.python.ops.linalg.linear_operator_circulant', 'tensorflow.python.ops.signal', 'tensorflow.python.ops.signal.fft_ops', 'tensorflow.python.ops.gen_spectral_ops', 'tensorflow.python.ops.linalg.linear_operator_diag', 'tensorflow.python.ops.linalg.linear_operator_householder', 'tensorflow.python.ops.linalg.linear_operator_identity', 'tensorflow.python.ops.linalg.linear_operator_kronecker', 'tensorflow.python.ops.linalg.cholesky_registrations', 'tensorflow.python.ops.linalg.linear_operator_lower_triangular', 'tensorflow.python.ops.linalg.inverse_registrations', 'tensorflow.python.ops.linalg.linear_operator_inversion', 'tensorflow.python.ops.linalg.matmul_registrations', 'tensorflow.python.ops.linalg.linear_operator_composition', 'tensorflow.python.ops.linalg.linear_operator_zeros', 'tensorflow.python.ops.linalg.registrations_util', 'tensorflow.python.ops.linalg.solve_registrations', 'tensorflow.python.ops.linalg.linear_operator_full_matrix', 'tensorflow.python.ops.linalg.linear_operator_low_rank_update', 'tensorflow.python.ops.linalg.linear_operator_toeplitz', 'tensorflow.python.ops.losses.losses', 'tensorflow.python.ops.signal.signal', 'tensorflow.python.ops.signal.dct_ops', 'tensorflow.python.ops.signal.mel_ops', 'tensorflow.python.ops.signal.shape_ops', 'tensorflow.python.ops.signal.util_ops', 'tensorflow.python.ops.signal.mfcc_ops', 'tensorflow.python.ops.signal.reconstruction_ops', 'tensorflow.python.ops.signal.spectral_ops', 'tensorflow.python.ops.signal.window_ops', 'tensorflow.python.profiler', 'tensorflow.python.profiler.profiler', 'tensorflow.core.profiler', 'tensorflow.core.profiler.tfprof_log_pb2', 'tensorflow.core.profiler.tfprof_output_pb2', 'tensorflow.python.profiler.model_analyzer', 'tensorflow.core.profiler.tfprof_options_pb2', 'tensorflow.python.profiler.option_builder', 'tensorflow.python.profiler.tfprof_logger', 'tensorflow.python.profiler.internal', 'tensorflow.python.profiler.internal.flops_registry', 'tensorflow.python.saved_model.saved_model', 'tensorflow.python.saved_model.loader', 'tensorflow.python.saved_model.main_op', 'tensorflow.python.saved_model.main_op_impl', 'tensorflow.python.saved_model.utils', 'tensorflow.python.saved_model.simple_save', 'tensorflow.python.tpu.api', 'tensorflow.python.tpu.bfloat16', 'tensorflow.python.tpu.feature_column_v2', 'tensorflow.python.tpu.feature_column', 'tensorflow.python.tpu.tpu_embedding', 'tensorflow.core.protobuf.tpu.optimization_parameters_pb2', 'google.protobuf.wrappers_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_output_layout_pb2', 'tensorflow.python.tpu.tpu_optimizer', 'tensorflow.python.user_ops', 'tensorflow.python.user_ops.user_ops', 'tensorflow.python.ops.gen_user_ops', 'tensorflow.python.ops.gen_audio_ops', 'tensorflow.python.ops.gen_boosted_trees_ops', 'tensorflow.python.training.training', 'tensorflow.python.ops.sdca_ops', 'tensorflow.python.ops.gen_sdca_ops', 'tensorflow.python.training.adadelta', 'tensorflow.python.training.adagrad', 'tensorflow.python.training.adagrad_da', 'tensorflow.python.training.proximal_adagrad', 'tensorflow.python.training.adam', 'tensorflow.python.training.ftrl', 'tensorflow.python.training.experimental.loss_scale_optimizer', 'tensorflow.python.training.experimental.mixed_precision', 'tensorflow.python.training.momentum', 'tensorflow.python.training.moving_averages', 'tensorflow.python.training.rmsprop', 'tensorflow.python.training.gradient_descent', 'tensorflow.python.training.proximal_gradient_descent', 'tensorflow.python.training.sync_replicas_optimizer', 'tensorflow.python.training.input', 'tensorflow.python.layers.utils', 'tensorflow.python.training.basic_loops', 'tensorflow.python.training.tracking.python_state', 'tensorflow.python.training.supervisor', 'tensorflow.python.training.warm_starting_util', 'tensorflow.python.training.checkpoint_ops', 'tensorflow.python.ops.gen_checkpoint_ops', 'tensorflow.python.pywrap_tensorflow', 'tensorflow.core.example', 'tensorflow.core.example.example_pb2', 'tensorflow.core.example.feature_pb2', 'tensorflow.python.training.learning_rate_decay', 'tensorflow.python.platform.resource_loader', 'tensorflow.python.platform.sysconfig', 'tensorflow.python.platform.test', 'tensorflow.python.framework.test_util', 'absl.testing', 'absl.testing.parameterized', 'absl.testing.absltest', 'shlex', 'absl._enum_module', 'absl.testing._pretty_print_reporter', 'absl.third_party', 'absl.third_party.unittest3_backport', 'absl.third_party.unittest3_backport.case', 'absl.third_party.unittest3_backport.result', 'absl.testing.xml_reporter', 'xml.sax', 'xml.sax.xmlreader', 'xml.sax.handler', 'xml.sax._exceptions', 'xml.sax.saxutils', 'unittest.mock', 'tensorflow.python.ops.control_flow_util_v2', 'tensorflow.python.platform.googletest', 'tensorflow.python.platform.benchmark', 'tensorflow.core.util.test_log_pb2', 'tensorflow.python.util.protobuf', 'tensorflow.python.util.protobuf.compare', 'tensorflow.python.ops.gradient_checker', 'tensorflow.python.compat.v2_compat', 'tensorflow.python.ops.control_flow_v2_toggles', 'tensorflow.python.eager.remote', 'tensorflow.python.platform.remote_utils', 'tensorflow.python.ops.rnn', 'tensorflow.python.ops.rnn_cell_impl', 'tensorflow.python.ops.rnn_cell', 'tensorflow.python.tools', 'tensorflow.python.tools.module_util', 'tensorflow_core._api', 'tensorflow_core._api.v2', 'tensorflow_core._api.v2.audio', 'tensorflow_core._api.v2.autograph', 'tensorflow_core._api.v2.autograph.experimental', 'tensorflow_core._api.v2.bitwise', 'tensorflow_core._api.v2.compat', 'tensorflow_core._api.v2.compat.v1', 'tensorflow_core._api.v2.compat.v1.app', 'tensorflow_core._api.v2.compat.v1.audio', 'tensorflow_core._api.v2.compat.v1.autograph', 'tensorflow_core._api.v2.compat.v1.autograph.experimental', 'tensorflow_core._api.v2.compat.v1.bitwise', 'tensorflow_core._api.v2.compat.v1.compat', 'tensorflow_core._api.v2.compat.v1.config', 'tensorflow_core._api.v2.compat.v1.config.experimental', 'tensorflow_core._api.v2.compat.v1.config.optimizer', 'tensorflow_core._api.v2.compat.v1.config.threading', 'tensorflow_core._api.v2.compat.v1.data', 'tensorflow_core._api.v2.compat.v1.data.experimental', 'tensorflow_core._api.v2.compat.v1.debugging', 'tensorflow_core._api.v2.compat.v1.distribute', 'tensorflow_core._api.v2.compat.v1.distribute.cluster_resolver', 'tensorflow_core._api.v2.compat.v1.distribute.experimental', 'tensorflow_core._api.v2.compat.v1.distributions', 'tensorflow_core._api.v2.compat.v1.dtypes', 'tensorflow_core._api.v2.compat.v1.errors', 'tensorflow_core._api.v2.compat.v1.experimental', 'tensorflow_core._api.v2.compat.v1.feature_column', 'tensorflow_core._api.v2.compat.v1.gfile', 'tensorflow_core._api.v2.compat.v1.graph_util', 'tensorflow_core._api.v2.compat.v1.image', 'tensorflow_core._api.v2.compat.v1.initializers', 'tensorflow_core._api.v2.compat.v1.io', 'tensorflow_core._api.v2.compat.v1.io.gfile', 'tensorflow_core._api.v2.compat.v1.layers', 'tensorflow_core._api.v2.compat.v1.layers.experimental', 'tensorflow_core._api.v2.compat.v1.linalg', 'tensorflow_core._api.v2.compat.v1.lite', 'tensorflow_core._api.v2.compat.v1.lite.constants', 'tensorflow_core.lite', 'tensorflow.lite.python', 'tensorflow.lite.python.lite_constants', 'tensorflow.lite.toco', 'tensorflow.lite.toco.toco_flags_pb2', 'tensorflow.lite.toco.types_pb2', 'tensorflow_core._api.v2.compat.v1.lite.experimental', 'tensorflow_core._api.v2.compat.v1.lite.experimental.nn', 'tensorflow.lite.python.lite', 'tensorflow.lite.experimental', 'tensorflow.lite.experimental.examples', 'tensorflow.lite.experimental.examples.lstm', 'tensorflow.lite.experimental.examples.lstm.rnn', 'tensorflow.lite.python.op_hint', 'tensorflow.lite.experimental.examples.lstm.rnn_cell', 'tensorflow.lite.experimental.microfrontend', 'tensorflow.lite.experimental.microfrontend.python', 'tensorflow.lite.experimental.microfrontend.python.ops', 'tensorflow.lite.experimental.microfrontend.python.ops.audio_microfrontend_op', 'tensorflow.lite.experimental.microfrontend.ops', 'tensorflow.lite.experimental.microfrontend.ops.gen_audio_microfrontend_op', '0fff33299848a31d11987ac15de59dd7', 'tensorflow.lite.experimental.tensorboard', 'tensorflow.lite.experimental.tensorboard.ops_util', 'tensorflow.lite.python.wrap_toco', 'tensorflow.lite.python.convert', 'tensorflow.lite.python.util', 'tensorflow.python.framework.convert_to_constants', 'tensorflow.python.grappler', 'tensorflow.python.grappler.tf_optimizer', 'tensorflow.python.grappler.cluster', 'tensorflow.core.grappler', 'tensorflow.core.grappler.costs', 'tensorflow.core.grappler.costs.op_performance_data_pb2', 'tensorflow.core.protobuf.device_properties_pb2', 'tensorflow.lite.toco.model_flags_pb2', 'tensorflow.lite.python.convert_saved_model', 'tensorflow.lite.python.interpreter', 'tensorflow.lite.python.optimize', 'tensorflow.lite.python.optimize.calibrator', 'tensorflow_core._api.v2.compat.v1.logging', 'tensorflow_core._api.v2.compat.v1.lookup', 'tensorflow_core._api.v2.compat.v1.lookup.experimental', 'tensorflow_core._api.v2.compat.v1.losses', 'tensorflow_core._api.v2.compat.v1.manip', 'tensorflow_core._api.v2.compat.v1.math', 'tensorflow_core._api.v2.compat.v1.metrics', 'tensorflow_core._api.v2.compat.v1.nest', 'tensorflow_core._api.v2.compat.v1.nn', 'tensorflow_core._api.v2.compat.v1.nn.rnn_cell', 'tensorflow_core._api.v2.compat.v1.profiler', 'tensorflow_core._api.v2.compat.v1.python_io', 'tensorflow_core._api.v2.compat.v1.quantization', 'tensorflow_core._api.v2.compat.v1.queue', 'tensorflow_core._api.v2.compat.v1.ragged', 'tensorflow_core._api.v2.compat.v1.random', 'tensorflow_core._api.v2.compat.v1.random.experimental', 'tensorflow_core._api.v2.compat.v1.raw_ops', 'tensorflow_core._api.v2.compat.v1.resource_loader', 'tensorflow_core._api.v2.compat.v1.saved_model', 'tensorflow_core._api.v2.compat.v1.saved_model.builder', 'tensorflow_core._api.v2.compat.v1.saved_model.constants', 'tensorflow_core._api.v2.compat.v1.saved_model.experimental', 'tensorflow_core._api.v2.compat.v1.saved_model.loader', 'tensorflow_core._api.v2.compat.v1.saved_model.main_op', 'tensorflow_core._api.v2.compat.v1.saved_model.signature_constants', 'tensorflow_core._api.v2.compat.v1.saved_model.signature_def_utils', 'tensorflow_core._api.v2.compat.v1.saved_model.tag_constants', 'tensorflow_core._api.v2.compat.v1.saved_model.utils', 'tensorflow_core._api.v2.compat.v1.sets', 'tensorflow_core._api.v2.compat.v1.signal', 'tensorflow_core._api.v2.compat.v1.sparse', 'tensorflow_core._api.v2.compat.v1.spectral', 'tensorflow_core._api.v2.compat.v1.strings', 'tensorflow_core._api.v2.compat.v1.summary', 'tensorflow_core._api.v2.compat.v1.sysconfig', 'tensorflow_core._api.v2.compat.v1.test', 'tensorflow_core._api.v2.compat.v1.tpu', 'tensorflow_core._api.v2.compat.v1.tpu.experimental', 'tensorflow_core._api.v2.compat.v1.train', 'tensorflow_core._api.v2.compat.v1.train.experimental', 'tensorflow_core._api.v2.compat.v1.train.queue_runner', 'tensorflow_core._api.v2.compat.v1.user_ops', 'tensorflow_core._api.v2.compat.v1.version', 'tensorflow_core._api.v2.compat.v1.xla', 'tensorflow_core._api.v2.compat.v1.xla.experimental', 'tensorflow_estimator', 'tensorflow_estimator._api', 'tensorflow_estimator._api.v1', 'tensorflow_estimator._api.v1.estimator', 'tensorflow_estimator._api.v1.estimator.experimental', 'tensorflow_estimator.python', 'tensorflow_estimator.python.estimator', 'tensorflow_estimator.python.estimator.canned', 'tensorflow_estimator.python.estimator.canned.dnn', 'tensorflow_estimator.python.estimator.estimator', 'tensorflow.python.distribute.estimator_training', 'tensorflow.python.training.evaluation', 'tensorflow.python.util.compat_internal', 'tensorflow_estimator.python.estimator.model_fn', 'tensorflow_estimator.python.estimator.mode_keys', 'tensorflow_estimator.python.estimator.run_config', 'tensorflow_estimator.python.estimator.util', 'tensorflow_estimator.python.estimator.export', 'tensorflow_estimator.python.estimator.export.export_lib', 'tensorflow_estimator.python.estimator.export.export', 'tensorflow_estimator.python.estimator.canned.head', 'tensorflow_estimator.python.estimator.canned.metric_keys', 'tensorflow_estimator.python.estimator.canned.prediction_keys', 'tensorflow_estimator.python.estimator.export.export_output', 'tensorflow_estimator.python.estimator.canned.optimizers', 'tensorflow_estimator.python.estimator.head', 'tensorflow_estimator.python.estimator.head.head_utils', 'tensorflow_estimator.python.estimator.head.binary_class_head', 'tensorflow_estimator.python.estimator.head.base_head', 'tensorflow_estimator.python.estimator.head.multi_class_head', 'tensorflow_estimator.python.estimator.head.regression_head', 'tensorflow_estimator.python.estimator.canned.kmeans', 'tensorflow.python.ops.clustering_ops', 'tensorflow.python.ops.gen_clustering_ops', 'tensorflow_estimator.python.estimator.canned.linear', 'tensorflow_estimator.python.estimator.canned.linear_optimizer', 'tensorflow_estimator.python.estimator.canned.linear_optimizer.python', 'tensorflow_estimator.python.estimator.canned.linear_optimizer.python.utils', 'tensorflow_estimator.python.estimator.canned.linear_optimizer.python.utils.sdca_ops', 'tensorflow_estimator.python.estimator.canned.linear_optimizer.python.utils.sharded_mutable_dense_hashtable', 'tensorflow_estimator.python.estimator.early_stopping', 'tensorflow_estimator.python.estimator.hooks', 'tensorflow_estimator.python.estimator.hooks.hooks', 'tensorflow.python.util.module_wrapper', 'tensorflow.tools.compatibility', 'tensorflow.tools.compatibility.all_renames_v2', 'tensorflow.tools.compatibility.renames_v2', 'tensorflow_estimator._api.v1.estimator.export', 'tensorflow_estimator._api.v1.estimator.inputs', 'tensorflow_estimator.python.estimator.inputs', 'tensorflow_estimator.python.estimator.inputs.numpy_io', 'tensorflow_estimator.python.estimator.inputs.queues', 'tensorflow_estimator.python.estimator.inputs.queues.feeding_functions', 'tensorflow_estimator.python.estimator.inputs.queues.feeding_queue_runner', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'dateutil', 'dateutil._version', 'pandas.compat', 'pandas.compat.chainmap', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'mmap', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 0/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 2.786827
INFO   weighted_variance: tensor(13.9123, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.3204, device='cuda:0')
INFO   l1importance : tensor([0.1000, 0.4952, 0.5019, 0.5993, 0.3830, 0.1612, 0.2665, 0.3068, 0.2722],
       device='cuda:0')
INFO   stdH:tensor([ 3.9401,  2.9262,  2.9013,  4.1519,  5.4012,  7.4128,  9.6476, 11.4607],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.1834, 0.2204, 0.1892, 0.1858, 0.2278, 0.2073, 0.1903, 0.1918],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 10/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.261032
INFO   weighted_variance: tensor(13.2682, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.3279, device='cuda:0')
INFO   l1importance : tensor([0.1000, 0.4937, 0.4983, 0.5975, 0.3801, 0.1610, 0.2641, 0.3045, 0.2699],
       device='cuda:0')
INFO   stdH:tensor([ 3.3687,  2.1050,  3.0344,  4.6553,  5.5392,  7.7276,  9.8223, 11.5043],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.1789, 0.2363, 0.2004, 0.2071, 0.2278, 0.2029, 0.1798, 0.1779],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 20/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.376023
INFO   weighted_variance: tensor(11.7710, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.3420, device='cuda:0')
INFO   l1importance : tensor([0.1000, 0.4924, 0.4970, 0.5979, 0.3800, 0.1614, 0.2632, 0.3035, 0.2687],
       device='cuda:0')
INFO   stdH:tensor([ 3.9036,  2.2304,  3.2669,  4.9470,  5.5333,  7.4199,  9.6873, 10.9021],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.1487, 0.2694, 0.2160, 0.2514, 0.2251, 0.1803, 0.1746, 0.1542],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 30/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.247369
INFO   weighted_variance: tensor(9.9862, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.3390, device='cuda:0')
INFO   l1importance : tensor([0.1000, 0.4914, 0.4958, 0.5984, 0.3798, 0.1614, 0.2631, 0.3037, 0.2674],
       device='cuda:0')
INFO   stdH:tensor([ 3.8700,  2.3598,  3.2982,  4.8603,  5.3626,  7.1128,  9.3856, 10.2317],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.1685, 0.2703, 0.2382, 0.2352, 0.2266, 0.1687, 0.1677, 0.1324],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 40/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.375966
INFO   weighted_variance: tensor(8.1870, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.3302, device='cuda:0')
INFO   l1importance : tensor([0.1000, 0.4906, 0.4943, 0.5987, 0.3794, 0.1613, 0.2653, 0.3046, 0.2662],
       device='cuda:0')
INFO   stdH:tensor([3.8638, 2.4600, 3.2925, 4.8444, 4.7852, 6.9399, 8.8463, 9.6141],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.1736, 0.2682, 0.2605, 0.2320, 0.2090, 0.1644, 0.1450, 0.1211],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 50/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.260274
INFO   weighted_variance: tensor(7.4164, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.3424, device='cuda:0')
INFO   l1importance : tensor([0.1000, 0.4897, 0.4929, 0.5987, 0.3788, 0.1614, 0.2677, 0.3056, 0.2652],
       device='cuda:0')
INFO   stdH:tensor([3.6022, 2.5290, 3.2910, 4.7840, 4.5541, 6.6672, 8.4156, 9.6399],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.1947, 0.2764, 0.2883, 0.2169, 0.2060, 0.1553, 0.1361, 0.1134],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 60/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.393855
INFO   weighted_variance: tensor(6.9247, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.3472, device='cuda:0')
INFO   l1importance : tensor([0.1000, 0.4885, 0.4932, 0.5986, 0.3780, 0.1618, 0.2700, 0.3064, 0.2645],
       device='cuda:0')
INFO   stdH:tensor([3.2034, 2.3112, 3.2463, 4.6381, 4.3380, 6.7768, 8.2589, 9.9526],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.2003, 0.3005, 0.2879, 0.2018, 0.2009, 0.1511, 0.1267, 0.1179],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 70/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.253747
INFO   weighted_variance: tensor(6.9245, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.3557, device='cuda:0')
INFO   l1importance : tensor([0.1000, 0.4866, 0.4951, 0.5986, 0.3776, 0.1627, 0.2716, 0.3069, 0.2642],
       device='cuda:0')
INFO   stdH:tensor([3.0028, 2.3983, 3.4370, 4.6236, 3.8050, 6.3630, 7.9747, 9.7308],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.2090, 0.3086, 0.2916, 0.2018, 0.1868, 0.1537, 0.1178, 0.1365],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 80/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.392844
INFO   weighted_variance: tensor(5.6120, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.3491, device='cuda:0')
INFO   l1importance : tensor([0.1000, 0.4838, 0.4974, 0.5986, 0.3776, 0.1639, 0.2725, 0.3071, 0.2640],
       device='cuda:0')
INFO   stdH:tensor([2.8220, 2.3280, 3.3656, 4.2981, 3.6909, 6.0540, 7.5364, 9.1459],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.2196, 0.3169, 0.2928, 0.1944, 0.1802, 0.1350, 0.1041, 0.1241],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 90/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.256342
INFO   weighted_variance: tensor(4.4881, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.3368, device='cuda:0')
INFO   l1importance : tensor([0.1000, 0.4809, 0.4990, 0.5986, 0.3776, 0.1650, 0.2732, 0.3071, 0.2638],
       device='cuda:0')
INFO   stdH:tensor([2.5253, 2.3676, 3.3468, 4.0849, 3.6055, 5.7563, 7.4269, 8.7048],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.2353, 0.3228, 0.2905, 0.1884, 0.1612, 0.1120, 0.0898, 0.1037],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 100/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.375545
INFO   weighted_variance: tensor(3.6967, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.3473, device='cuda:0')
INFO   l1importance : tensor([0.1000, 0.4780, 0.4992, 0.5985, 0.3774, 0.1656, 0.2735, 0.3070, 0.2637],
       device='cuda:0')
INFO   stdH:tensor([2.1130, 2.2162, 3.3369, 3.9794, 3.8228, 5.6702, 7.3287, 8.6531],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.2636, 0.3448, 0.2945, 0.1838, 0.1343, 0.0946, 0.0714, 0.0798],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 110/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.227423
INFO   weighted_variance: tensor(3.0866, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.3678, device='cuda:0')
INFO   l1importance : tensor([0.1000, 0.4751, 0.4984, 0.5984, 0.3772, 0.1656, 0.2737, 0.3070, 0.2636],
       device='cuda:0')
INFO   stdH:tensor([1.8238, 2.0163, 3.2220, 3.6858, 4.0246, 5.7919, 7.2892, 9.1041],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.2969, 0.3662, 0.2920, 0.1783, 0.1206, 0.0840, 0.0606, 0.0564],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 120/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.397444
INFO   weighted_variance: tensor(2.4411, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.3225, device='cuda:0')
INFO   l1importance : tensor([0.1000, 0.4736, 0.4971, 0.5981, 0.3769, 0.1652, 0.2738, 0.3071, 0.2634],
       device='cuda:0')
INFO   stdH:tensor([ 1.6984,  2.0147,  3.1469,  3.1280,  3.7456,  6.0186,  7.3028, 10.0352],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.2998, 0.3384, 0.2574, 0.1634, 0.1151, 0.0805, 0.0586, 0.0441],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 130/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.240357
INFO   weighted_variance: tensor(2.3324, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.3883, device='cuda:0')
INFO   l1importance : tensor([0.1000, 0.4718, 0.4961, 0.5978, 0.3764, 0.1647, 0.2738, 0.3072, 0.2633],
       device='cuda:0')
INFO   stdH:tensor([ 1.2785,  1.8691,  3.1759,  2.7492,  3.5675,  6.1887,  7.2139, 10.3843],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.3672, 0.3747, 0.2554, 0.1512, 0.1102, 0.0884, 0.0602, 0.0371],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 140/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.346101
INFO   weighted_variance: tensor(2.0303, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.3822, device='cuda:0')
INFO   l1importance : tensor([0.1000, 0.4698, 0.4961, 0.5968, 0.3760, 0.1644, 0.2739, 0.3073, 0.2638],
       device='cuda:0')
INFO   stdH:tensor([1.3057, 1.8908, 2.9414, 2.4792, 3.6763, 6.0232, 7.4677, 9.8006],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.3632, 0.3903, 0.2238, 0.1555, 0.1154, 0.0797, 0.0535, 0.0336],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 150/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.228358
INFO   weighted_variance: tensor(2.0254, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.4340, device='cuda:0')
INFO   l1importance : tensor([0.1000, 0.4681, 0.4963, 0.5953, 0.3757, 0.1641, 0.2738, 0.3075, 0.2654],
       device='cuda:0')
INFO   stdH:tensor([1.2895, 1.9017, 2.9426, 2.4362, 3.5537, 5.8489, 7.2890, 9.0600],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.4056, 0.4216, 0.2134, 0.1572, 0.1114, 0.0752, 0.0477, 0.0343],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 160/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.368824
INFO   weighted_variance: tensor(1.8300, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.4448, device='cuda:0')
INFO   l1importance : tensor([0.1000, 0.4666, 0.4965, 0.5935, 0.3755, 0.1637, 0.2738, 0.3078, 0.2685],
       device='cuda:0')
INFO   stdH:tensor([1.1583, 1.8414, 2.8552, 2.2777, 3.4693, 5.6582, 7.1837, 8.5686],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.4314, 0.4172, 0.1957, 0.1582, 0.1087, 0.0777, 0.0444, 0.0389],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 170/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.231392
INFO   weighted_variance: tensor(1.8582, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.4406, device='cuda:0')
INFO   l1importance : tensor([0.1003, 0.4653, 0.4967, 0.5917, 0.3753, 0.1633, 0.2737, 0.3081, 0.2716],
       device='cuda:0')
INFO   stdH:tensor([1.2526, 1.9565, 2.7909, 2.2805, 3.3930, 5.5776, 7.2515, 8.4500],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.4475, 0.4001, 0.1886, 0.1549, 0.1050, 0.0796, 0.0453, 0.0370],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 180/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.366045
INFO   weighted_variance: tensor(1.6105, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.4705, device='cuda:0')
INFO   l1importance : tensor([0.1005, 0.4638, 0.4971, 0.5900, 0.3750, 0.1631, 0.2738, 0.3082, 0.2748],
       device='cuda:0')
INFO   stdH:tensor([1.0384, 1.8299, 2.7126, 2.1955, 3.2958, 5.2290, 6.9712, 8.2514],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.4855, 0.3983, 0.1831, 0.1521, 0.1010, 0.0763, 0.0466, 0.0366],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 190/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.234988
INFO   weighted_variance: tensor(1.4832, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.5328, device='cuda:0')
INFO   l1importance : tensor([0.1007, 0.4623, 0.4974, 0.5887, 0.3747, 0.1629, 0.2738, 0.3082, 0.2779],
       device='cuda:0')
INFO   stdH:tensor([0.9297, 1.7146, 2.7941, 2.1594, 3.1238, 5.0881, 7.2150, 8.4377],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.5426, 0.4081, 0.1744, 0.1535, 0.1005, 0.0701, 0.0418, 0.0324],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 200/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.345985
INFO   weighted_variance: tensor(1.2835, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.4944, device='cuda:0')
INFO   l1importance : tensor([0.1010, 0.4605, 0.4978, 0.5881, 0.3742, 0.1627, 0.2739, 0.3081, 0.2810],
       device='cuda:0')
INFO   stdH:tensor([0.8857, 1.5985, 2.8224, 2.2016, 3.1376, 5.1317, 7.4351, 8.4411],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.5339, 0.3778, 0.1650, 0.1506, 0.0985, 0.0665, 0.0371, 0.0335],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 210/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.239360
INFO   weighted_variance: tensor(1.1527, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.5314, device='cuda:0')
INFO   l1importance : tensor([0.1018, 0.4584, 0.4980, 0.5885, 0.3737, 0.1626, 0.2740, 0.3079, 0.2840],
       device='cuda:0')
INFO   stdH:tensor([0.7767, 1.4964, 3.0065, 2.3421, 3.1872, 5.2978, 7.2082, 8.6582],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.5767, 0.3754, 0.1534, 0.1425, 0.0933, 0.0558, 0.0385, 0.0281],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 220/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.391573
INFO   weighted_variance: tensor(0.9470, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.5109, device='cuda:0')
INFO   l1importance : tensor([0.1026, 0.4563, 0.4979, 0.5897, 0.3732, 0.1624, 0.2741, 0.3075, 0.2867],
       device='cuda:0')
INFO   stdH:tensor([0.7698, 1.3717, 2.9215, 2.1886, 2.8477, 5.4094, 6.5299, 9.1106],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.5799, 0.3499, 0.1413, 0.1397, 0.0888, 0.0473, 0.0462, 0.0200],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 230/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.241326
INFO   weighted_variance: tensor(0.9730, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.5824, device='cuda:0')
INFO   l1importance : tensor([0.1033, 0.4542, 0.4975, 0.5911, 0.3730, 0.1623, 0.2742, 0.3071, 0.2895],
       device='cuda:0')
INFO   stdH:tensor([0.7699, 1.4398, 2.9619, 2.2522, 2.8009, 5.2754, 6.2591, 9.2692],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.6367, 0.3635, 0.1366, 0.1251, 0.0795, 0.0420, 0.0450, 0.0210],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 240/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.362756
INFO   weighted_variance: tensor(0.7910, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.5674, device='cuda:0')
INFO   l1importance : tensor([0.1039, 0.4521, 0.4969, 0.5926, 0.3730, 0.1622, 0.2743, 0.3069, 0.2924],
       device='cuda:0')
INFO   stdH:tensor([0.7541, 1.2507, 2.6131, 2.1563, 2.8316, 5.4079, 6.6858, 8.6654],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.6375, 0.3480, 0.1364, 0.1115, 0.0758, 0.0343, 0.0389, 0.0223],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 250/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.238970
INFO   weighted_variance: tensor(0.8105, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.5672, device='cuda:0')
INFO   l1importance : tensor([0.1043, 0.4500, 0.4962, 0.5940, 0.3729, 0.1625, 0.2745, 0.3072, 0.2954],
       device='cuda:0')
INFO   stdH:tensor([0.7636, 1.3511, 2.5657, 2.3642, 3.0858, 6.0249, 6.5958, 8.8053],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.6507, 0.3267, 0.1317, 0.1061, 0.0752, 0.0268, 0.0386, 0.0246],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 260/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.358187
INFO   weighted_variance: tensor(0.8157, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.5969, device='cuda:0')
INFO   l1importance : tensor([0.1046, 0.4477, 0.4954, 0.5949, 0.3728, 0.1629, 0.2748, 0.3085, 0.2986],
       device='cuda:0')
INFO   stdH:tensor([0.7316, 1.2705, 2.2098, 2.4095, 3.0072, 5.6893, 6.4786, 8.5966],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.6737, 0.3220, 0.1340, 0.1034, 0.0826, 0.0267, 0.0470, 0.0325],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 270/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.224035
INFO   weighted_variance: tensor(0.8708, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.6368, device='cuda:0')
INFO   l1importance : tensor([0.1049, 0.4455, 0.4943, 0.5955, 0.3728, 0.1636, 0.2751, 0.3107, 0.3018],
       device='cuda:0')
INFO   stdH:tensor([0.7197, 1.3767, 2.1553, 2.3086, 2.9941, 6.1627, 6.6452, 9.1814],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7027, 0.3233, 0.1333, 0.0932, 0.0862, 0.0272, 0.0568, 0.0245],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 280/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.348106
INFO   weighted_variance: tensor(0.8379, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.6474, device='cuda:0')
INFO   l1importance : tensor([0.1051, 0.4435, 0.4930, 0.5956, 0.3732, 0.1645, 0.2754, 0.3132, 0.3049],
       device='cuda:0')
INFO   stdH:tensor([ 0.7277,  1.3503,  2.1200,  2.2900,  3.0147,  6.7002,  6.7771, 10.0779],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7130, 0.3233, 0.1333, 0.0834, 0.0753, 0.0321, 0.0496, 0.0224],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 290/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.239385
INFO   weighted_variance: tensor(0.6836, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7229, device='cuda:0')
INFO   l1importance : tensor([0.1052, 0.4418, 0.4915, 0.5955, 0.3739, 0.1655, 0.2756, 0.3158, 0.3077],
       device='cuda:0')
INFO   stdH:tensor([0.6095, 1.1639, 1.9641, 2.0019, 2.9522, 6.7297, 6.8983, 9.8189],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7622, 0.3307, 0.1386, 0.0778, 0.0633, 0.0313, 0.0426, 0.0240],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 300/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.355051
INFO   weighted_variance: tensor(1.6435, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.6258, device='cuda:0')
INFO   l1importance : tensor([0.1052, 0.4404, 0.4899, 0.5952, 0.3748, 0.1665, 0.2758, 0.3183, 0.3102],
       device='cuda:0')
INFO   stdH:tensor([1.2812, 2.3318, 1.9358, 2.3456, 3.1342, 6.2671, 7.0007, 9.6489],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7083, 0.3092, 0.1343, 0.0631, 0.0532, 0.0293, 0.0516, 0.0143],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 310/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.219762
INFO   weighted_variance: tensor(0.5830, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.6732, device='cuda:0')
INFO   l1importance : tensor([0.1051, 0.4400, 0.4881, 0.5947, 0.3761, 0.1675, 0.2756, 0.3202, 0.3122],
       device='cuda:0')
INFO   stdH:tensor([ 0.5670,  1.1161,  1.7749,  2.3734,  3.2651,  6.2602,  6.8748, 10.4979],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7432, 0.3074, 0.1314, 0.0521, 0.0497, 0.0284, 0.0543, 0.0138],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 320/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.378448
INFO   weighted_variance: tensor(0.4846, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.6302, device='cuda:0')
INFO   l1importance : tensor([0.1049, 0.4403, 0.4864, 0.5938, 0.3773, 0.1688, 0.2753, 0.3217, 0.3139],
       device='cuda:0')
INFO   stdH:tensor([0.5580, 1.0713, 1.7144, 2.2117, 2.9551, 6.3371, 6.7433, 9.7745],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7183, 0.2979, 0.1305, 0.0556, 0.0494, 0.0242, 0.0469, 0.0112],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 330/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.230917
INFO   weighted_variance: tensor(0.7514, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.6879, device='cuda:0')
INFO   l1importance : tensor([0.1047, 0.4410, 0.4848, 0.5928, 0.3785, 0.1700, 0.2748, 0.3230, 0.3154],
       device='cuda:0')
INFO   stdH:tensor([ 0.7637,  1.4734,  1.7097,  2.3762,  3.0291,  6.4667,  6.9440, 10.2052],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7546, 0.3055, 0.1317, 0.0552, 0.0467, 0.0252, 0.0419, 0.0129],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 340/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.342082
INFO   weighted_variance: tensor(0.4433, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.6974, device='cuda:0')
INFO   l1importance : tensor([0.1045, 0.4421, 0.4830, 0.5916, 0.3798, 0.1713, 0.2742, 0.3243, 0.3166],
       device='cuda:0')
INFO   stdH:tensor([0.5221, 1.0254, 1.6545, 2.1885, 2.9281, 6.3304, 6.9258, 9.8098],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7604, 0.3078, 0.1306, 0.0555, 0.0463, 0.0248, 0.0392, 0.0091],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 350/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.213429
INFO   weighted_variance: tensor(0.4442, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.6934, device='cuda:0')
INFO   l1importance : tensor([0.1043, 0.4435, 0.4813, 0.5903, 0.3810, 0.1724, 0.2735, 0.3254, 0.3177],
       device='cuda:0')
INFO   stdH:tensor([ 0.5267,  1.0423,  1.6916,  2.1516,  3.0520,  6.2492,  6.9450, 10.4289],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7586, 0.3067, 0.1295, 0.0553, 0.0450, 0.0237, 0.0375, 0.0103],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 360/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.346075
INFO   weighted_variance: tensor(0.4179, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.6451, device='cuda:0')
INFO   l1importance : tensor([0.1042, 0.4452, 0.4795, 0.5890, 0.3822, 0.1734, 0.2727, 0.3264, 0.3187],
       device='cuda:0')
INFO   stdH:tensor([0.5382, 1.0329, 1.8149, 2.1975, 3.1607, 6.3874, 7.0313, 9.8357],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7290, 0.3020, 0.1287, 0.0527, 0.0387, 0.0222, 0.0335, 0.0092],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 370/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.241354
INFO   weighted_variance: tensor(0.3749, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.6365, device='cuda:0')
INFO   l1importance : tensor([0.1041, 0.4471, 0.4778, 0.5876, 0.3833, 0.1744, 0.2718, 0.3274, 0.3195],
       device='cuda:0')
INFO   stdH:tensor([0.5270, 0.9791, 1.4971, 2.1012, 3.1942, 6.3307, 7.1152, 9.9434],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7223, 0.3036, 0.1312, 0.0512, 0.0360, 0.0228, 0.0312, 0.0090],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 380/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.353485
INFO   weighted_variance: tensor(0.3719, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7247, device='cuda:0')
INFO   l1importance : tensor([0.1039, 0.4490, 0.4761, 0.5861, 0.3846, 0.1754, 0.2709, 0.3284, 0.3203],
       device='cuda:0')
INFO   stdH:tensor([ 0.5014,  0.9695,  1.4663,  2.1293,  3.2618,  6.1973,  7.2519, 10.1494],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7767, 0.3158, 0.1302, 0.0490, 0.0323, 0.0221, 0.0283, 0.0084],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 390/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.213457
INFO   weighted_variance: tensor(0.4047, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7172, device='cuda:0')
INFO   l1importance : tensor([0.1038, 0.4510, 0.4744, 0.5845, 0.3867, 0.1763, 0.2700, 0.3293, 0.3210],
       device='cuda:0')
INFO   stdH:tensor([ 0.5084,  1.0168,  1.9796,  2.5010,  3.6386,  6.3753,  7.3832, 10.0495],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7735, 0.3133, 0.1290, 0.0453, 0.0281, 0.0216, 0.0254, 0.0076],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 400/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.359012
INFO   weighted_variance: tensor(0.3423, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.6365, device='cuda:0')
INFO   l1importance : tensor([0.1038, 0.4530, 0.4727, 0.5829, 0.3885, 0.1772, 0.2691, 0.3303, 0.3216],
       device='cuda:0')
INFO   stdH:tensor([ 0.5254,  0.9192,  1.7223,  2.2781,  3.4874,  6.2356,  7.4589, 10.1480],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7222, 0.3074, 0.1301, 0.0426, 0.0235, 0.0205, 0.0226, 0.0084],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 410/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.241082
INFO   weighted_variance: tensor(0.3908, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7370, device='cuda:0')
INFO   l1importance : tensor([0.1037, 0.4548, 0.4709, 0.5812, 0.3902, 0.1780, 0.2682, 0.3313, 0.3222],
       device='cuda:0')
INFO   stdH:tensor([0.5463, 1.0590, 1.4085, 2.2150, 3.4836, 6.1261, 7.3279, 9.9993],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7839, 0.3199, 0.1302, 0.0419, 0.0213, 0.0208, 0.0210, 0.0070],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 420/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.345295
INFO   weighted_variance: tensor(0.2926, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7357, device='cuda:0')
INFO   l1importance : tensor([0.1036, 0.4566, 0.4694, 0.5795, 0.3918, 0.1788, 0.2674, 0.3323, 0.3227],
       device='cuda:0')
INFO   stdH:tensor([ 0.4617,  0.8841,  1.3560,  2.2599,  3.7204,  6.1211,  7.3685, 10.1471],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7844, 0.3177, 0.1293, 0.0392, 0.0179, 0.0204, 0.0187, 0.0069],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 430/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.222426
INFO   weighted_variance: tensor(0.3565, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.6759, device='cuda:0')
INFO   l1importance : tensor([0.1036, 0.4584, 0.4681, 0.5778, 0.3933, 0.1796, 0.2667, 0.3332, 0.3231],
       device='cuda:0')
INFO   stdH:tensor([ 0.5513,  1.0496,  1.4544,  2.4314,  4.1271,  6.1807,  7.5758, 10.1365],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7485, 0.3115, 0.1278, 0.0366, 0.0140, 0.0196, 0.0153, 0.0072],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 440/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.339064
INFO   weighted_variance: tensor(0.2989, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.6925, device='cuda:0')
INFO   l1importance : tensor([0.1035, 0.4601, 0.4671, 0.5761, 0.3947, 0.1804, 0.2660, 0.3340, 0.3236],
       device='cuda:0')
INFO   stdH:tensor([ 0.5092,  0.8947,  1.3137,  2.3409,  4.5951,  6.1589,  7.6119, 10.1384],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7575, 0.3159, 0.1298, 0.0364, 0.0119, 0.0191, 0.0148, 0.0065],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 450/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.226712
INFO   weighted_variance: tensor(0.3390, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.6930, device='cuda:0')
INFO   l1importance : tensor([0.1035, 0.4617, 0.4662, 0.5744, 0.3959, 0.1812, 0.2654, 0.3349, 0.3240],
       device='cuda:0')
INFO   stdH:tensor([ 0.5352,  1.0104,  1.3853,  2.4782,  4.9677,  6.2594,  7.6809, 10.1159],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7580, 0.3163, 0.1283, 0.0359, 0.0113, 0.0190, 0.0135, 0.0069],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 460/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.347318
INFO   weighted_variance: tensor(0.2754, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7293, device='cuda:0')
INFO   l1importance : tensor([0.1036, 0.4633, 0.4655, 0.5726, 0.3971, 0.1819, 0.2649, 0.3357, 0.3243],
       device='cuda:0')
INFO   stdH:tensor([0.4759, 0.8404, 1.3039, 2.2777, 3.9452, 6.0785, 7.5302, 9.7860],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7782, 0.3243, 0.1274, 0.0396, 0.0141, 0.0180, 0.0127, 0.0065],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 470/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.220518
INFO   weighted_variance: tensor(0.2868, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7335, device='cuda:0')
INFO   l1importance : tensor([0.1036, 0.4649, 0.4652, 0.5708, 0.3981, 0.1827, 0.2644, 0.3364, 0.3246],
       device='cuda:0')
INFO   stdH:tensor([0.4901, 0.9001, 1.2226, 2.2378, 4.4520, 6.1450, 7.4341, 9.9796],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7817, 0.3228, 0.1269, 0.0392, 0.0123, 0.0156, 0.0117, 0.0064],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 480/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.344108
INFO   weighted_variance: tensor(0.2823, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7825, device='cuda:0')
INFO   l1importance : tensor([0.1036, 0.4663, 0.4650, 0.5690, 0.3991, 0.1833, 0.2639, 0.3372, 0.3249],
       device='cuda:0')
INFO   stdH:tensor([0.4625, 0.8067, 1.5435, 2.8532, 4.3145, 6.4764, 7.7513, 9.9296],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.8089, 0.3327, 0.1244, 0.0387, 0.0114, 0.0143, 0.0100, 0.0066],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 490/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.209438
INFO   weighted_variance: tensor(0.2877, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7299, device='cuda:0')
INFO   l1importance : tensor([0.1037, 0.4674, 0.4647, 0.5671, 0.4000, 0.1839, 0.2636, 0.3381, 0.3252],
       device='cuda:0')
INFO   stdH:tensor([ 0.4831,  0.8605,  1.5047,  2.5410,  4.8380,  6.4208,  7.8699, 10.7315],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7783, 0.3274, 0.1226, 0.0373, 0.0132, 0.0122, 0.0101, 0.0080],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 500/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.324151
INFO   weighted_variance: tensor(0.2501, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7542, device='cuda:0')
INFO   l1importance : tensor([0.1037, 0.4682, 0.4644, 0.5653, 0.4008, 0.1845, 0.2636, 0.3391, 0.3255],
       device='cuda:0')
INFO   stdH:tensor([ 0.4635,  0.7862,  1.1606,  2.4239,  4.8927,  6.5732,  7.5828, 10.5712],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7914, 0.3338, 0.1215, 0.0359, 0.0128, 0.0111, 0.0093, 0.0067],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 510/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.215395
INFO   weighted_variance: tensor(0.2663, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7681, device='cuda:0')
INFO   l1importance : tensor([0.1038, 0.4688, 0.4639, 0.5637, 0.4014, 0.1850, 0.2636, 0.3401, 0.3257],
       device='cuda:0')
INFO   stdH:tensor([ 0.4683,  0.8366,  1.2153,  2.5038,  4.7671,  6.5796,  7.7581, 10.3968],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.8005, 0.3332, 0.1199, 0.0374, 0.0123, 0.0104, 0.0082, 0.0073],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 520/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.337703
INFO   weighted_variance: tensor(0.2490, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.8308, device='cuda:0')
INFO   l1importance : tensor([0.1039, 0.4692, 0.4635, 0.5623, 0.4019, 0.1854, 0.2638, 0.3410, 0.3260],
       device='cuda:0')
INFO   stdH:tensor([ 0.4401,  0.7678,  1.1876,  2.4030,  5.1423,  6.0701,  7.9490, 10.2227],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.8357, 0.3413, 0.1188, 0.0372, 0.0128, 0.0098, 0.0075, 0.0074],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 530/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.204453
INFO   weighted_variance: tensor(0.2847, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7256, device='cuda:0')
INFO   l1importance : tensor([0.1039, 0.4695, 0.4632, 0.5612, 0.4023, 0.1865, 0.2641, 0.3419, 0.3262],
       device='cuda:0')
INFO   stdH:tensor([ 0.4940,  0.8423,  1.6097,  2.7371,  4.7570,  6.4994,  8.2305, 10.1569],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7752, 0.3304, 0.1176, 0.0369, 0.0123, 0.0090, 0.0069, 0.0067],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 540/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.333110
INFO   weighted_variance: tensor(0.2572, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.8422, device='cuda:0')
INFO   l1importance : tensor([0.1040, 0.4699, 0.4629, 0.5602, 0.4026, 0.1878, 0.2645, 0.3428, 0.3264],
       device='cuda:0')
INFO   stdH:tensor([0.4498, 0.7764, 1.1835, 2.4309, 4.8455, 6.6149, 7.5769, 9.9818],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.8417, 0.3445, 0.1158, 0.0361, 0.0119, 0.0096, 0.0078, 0.0070],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 550/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.225610
INFO   weighted_variance: tensor(0.2408, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7927, device='cuda:0')
INFO   l1importance : tensor([0.1041, 0.4701, 0.4625, 0.5594, 0.4028, 0.1891, 0.2649, 0.3437, 0.3266],
       device='cuda:0')
INFO   stdH:tensor([ 0.4501,  0.7561,  1.1711,  2.3702,  4.6372,  6.5289,  8.1142, 10.1407],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.8131, 0.3418, 0.1149, 0.0345, 0.0122, 0.0087, 0.0083, 0.0064],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 560/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.341936
INFO   weighted_variance: tensor(0.2362, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7810, device='cuda:0')
INFO   l1importance : tensor([0.1041, 0.4703, 0.4622, 0.5588, 0.4028, 0.1903, 0.2653, 0.3445, 0.3268],
       device='cuda:0')
INFO   stdH:tensor([ 0.4480,  0.7555,  1.2645,  2.4623,  4.8500,  6.4320,  7.8364, 10.6216],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.8077, 0.3386, 0.1118, 0.0335, 0.0117, 0.0076, 0.0071, 0.0062],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 570/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.218413
INFO   weighted_variance: tensor(0.2324, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7273, device='cuda:0')
INFO   l1importance : tensor([0.1042, 0.4707, 0.4618, 0.5582, 0.4025, 0.1916, 0.2655, 0.3453, 0.3269],
       device='cuda:0')
INFO   stdH:tensor([ 0.4761,  0.7313,  1.1658,  2.4208,  4.5469,  6.6844,  8.0033, 10.7131],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7733, 0.3392, 0.1130, 0.0327, 0.0123, 0.0070, 0.0067, 0.0055],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 580/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.337023
INFO   weighted_variance: tensor(0.2389, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7196, device='cuda:0')
INFO   l1importance : tensor([0.1042, 0.4710, 0.4613, 0.5578, 0.4020, 0.1928, 0.2658, 0.3461, 0.3269],
       device='cuda:0')
INFO   stdH:tensor([ 0.4851,  0.7672,  1.2148,  2.4220,  4.5474,  6.4148,  7.6856, 10.2532],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7720, 0.3324, 0.1092, 0.0308, 0.0117, 0.0072, 0.0068, 0.0051],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 590/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.224976
INFO   weighted_variance: tensor(0.2229, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.6993, device='cuda:0')
INFO   l1importance : tensor([0.1043, 0.4711, 0.4609, 0.5577, 0.4012, 0.1938, 0.2661, 0.3469, 0.3270],
       device='cuda:0')
INFO   stdH:tensor([ 0.4806,  0.7361,  1.1660,  2.4700,  4.6467,  6.8633,  7.2534, 10.4740],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7597, 0.3308, 0.1078, 0.0299, 0.0107, 0.0064, 0.0063, 0.0048],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 600/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.336075
INFO   weighted_variance: tensor(0.2300, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7491, device='cuda:0')
INFO   l1importance : tensor([0.1043, 0.4712, 0.4605, 0.5579, 0.4004, 0.1948, 0.2663, 0.3475, 0.3271],
       device='cuda:0')
INFO   stdH:tensor([ 0.4689,  0.7407,  1.1995,  2.5690,  4.6036,  6.3331,  8.0060, 10.2999],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7894, 0.3367, 0.1077, 0.0284, 0.0106, 0.0067, 0.0056, 0.0050],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 610/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.237393
INFO   weighted_variance: tensor(0.2330, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7499, device='cuda:0')
INFO   l1importance : tensor([0.1043, 0.4714, 0.4604, 0.5582, 0.3994, 0.1958, 0.2665, 0.3479, 0.3271],
       device='cuda:0')
INFO   stdH:tensor([ 0.4696,  0.7519,  1.1982,  2.8638,  4.4043,  6.9262,  8.3608, 10.3895],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7895, 0.3379, 0.1073, 0.0263, 0.0107, 0.0064, 0.0057, 0.0046],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 620/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.348070
INFO   weighted_variance: tensor(0.2244, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7728, device='cuda:0')
INFO   l1importance : tensor([0.1043, 0.4713, 0.4600, 0.5587, 0.3987, 0.1966, 0.2666, 0.3483, 0.3272],
       device='cuda:0')
INFO   stdH:tensor([ 0.4545,  0.7194,  1.1825,  2.7521,  5.0003,  7.2081,  8.2569, 10.1966],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.8045, 0.3378, 0.1028, 0.0263, 0.0109, 0.0071, 0.0058, 0.0060],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 630/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.204453
INFO   weighted_variance: tensor(0.2155, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7581, device='cuda:0')
INFO   l1importance : tensor([0.1044, 0.4708, 0.4599, 0.5594, 0.3980, 0.1973, 0.2670, 0.3487, 0.3272],
       device='cuda:0')
INFO   stdH:tensor([0.4548, 0.7038, 1.1925, 2.5438, 4.7585, 6.4555, 7.6189, 9.9746],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7961, 0.3358, 0.1025, 0.0266, 0.0105, 0.0063, 0.0060, 0.0052],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 640/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.345076
INFO   weighted_variance: tensor(0.2250, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.8318, device='cuda:0')
INFO   l1importance : tensor([0.1044, 0.4701, 0.4595, 0.5602, 0.3974, 0.1980, 0.2674, 0.3491, 0.3273],
       device='cuda:0')
INFO   stdH:tensor([ 0.4414,  0.7051,  1.1720,  2.5441,  4.8646,  6.3795,  7.3174, 10.2510],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.8381, 0.3433, 0.1027, 0.0270, 0.0106, 0.0075, 0.0066, 0.0054],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 650/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.219682
INFO   weighted_variance: tensor(0.2168, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7736, device='cuda:0')
INFO   l1importance : tensor([0.1045, 0.4694, 0.4593, 0.5611, 0.3968, 0.1985, 0.2678, 0.3494, 0.3273],
       device='cuda:0')
INFO   stdH:tensor([ 0.4569,  0.6829,  1.1464,  2.5764,  4.6619,  6.3607,  7.5789, 10.6439],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.8031, 0.3418, 0.1039, 0.0267, 0.0097, 0.0070, 0.0057, 0.0050],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 660/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.326127
INFO   weighted_variance: tensor(0.2080, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7665, device='cuda:0')
INFO   l1importance : tensor([0.1046, 0.4689, 0.4594, 0.5619, 0.3963, 0.1991, 0.2680, 0.3497, 0.3274],
       device='cuda:0')
INFO   stdH:tensor([ 0.4526,  0.6633,  1.0742,  2.4257,  4.7118,  6.3930,  7.2126, 10.4817],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7985, 0.3422, 0.1042, 0.0270, 0.0095, 0.0072, 0.0063, 0.0051],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 670/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.221408
INFO   weighted_variance: tensor(0.1991, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7909, device='cuda:0')
INFO   l1importance : tensor([0.1046, 0.4685, 0.4595, 0.5626, 0.3957, 0.1996, 0.2682, 0.3500, 0.3274],
       device='cuda:0')
INFO   stdH:tensor([ 0.4318,  0.6523,  1.0755,  2.5573,  4.5979,  6.6346,  7.9562, 10.6390],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.8118, 0.3466, 0.1047, 0.0254, 0.0094, 0.0067, 0.0052, 0.0048],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 680/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.357186
INFO   weighted_variance: tensor(0.2067, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.8110, device='cuda:0')
INFO   l1importance : tensor([0.1047, 0.4683, 0.4599, 0.5631, 0.3952, 0.2001, 0.2685, 0.3502, 0.3275],
       device='cuda:0')
INFO   stdH:tensor([ 0.4370,  0.6569,  1.0797,  2.7002,  4.9226,  6.7596,  8.2611, 10.6512],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.8233, 0.3487, 0.1038, 0.0237, 0.0089, 0.0066, 0.0051, 0.0047],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 690/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.215424
INFO   weighted_variance: tensor(0.2062, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7432, device='cuda:0')
INFO   l1importance : tensor([0.1047, 0.4679, 0.4602, 0.5633, 0.3947, 0.2004, 0.2689, 0.3505, 0.3277],
       device='cuda:0')
INFO   stdH:tensor([ 0.4606,  0.6650,  1.0858,  2.7426,  5.2083,  7.2050,  8.3075, 10.7687],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7849, 0.3406, 0.1026, 0.0230, 0.0083, 0.0065, 0.0043, 0.0046],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 700/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.340062
INFO   weighted_variance: tensor(0.2216, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.8678, device='cuda:0')
INFO   l1importance : tensor([0.1047, 0.4677, 0.4604, 0.5636, 0.3943, 0.2007, 0.2693, 0.3506, 0.3278],
       device='cuda:0')
INFO   stdH:tensor([ 0.4390,  0.6667,  1.0532,  2.8642,  5.4753,  7.0818,  8.7733, 10.6485],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.8535, 0.3571, 0.1056, 0.0224, 0.0088, 0.0060, 0.0043, 0.0046],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 710/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.216421
INFO   weighted_variance: tensor(0.2253, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.8675, device='cuda:0')
INFO   l1importance : tensor([0.1047, 0.4673, 0.4608, 0.5637, 0.3940, 0.2010, 0.2697, 0.3506, 0.3280],
       device='cuda:0')
INFO   stdH:tensor([ 0.4170,  0.7430,  1.2089,  3.0369,  5.4375,  7.6923,  9.1703, 11.1657],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.8537, 0.3568, 0.1041, 0.0219, 0.0085, 0.0060, 0.0044, 0.0042],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 720/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.359067
INFO   weighted_variance: tensor(0.2000, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7662, device='cuda:0')
INFO   l1importance : tensor([0.1047, 0.4668, 0.4612, 0.5637, 0.3938, 0.2012, 0.2702, 0.3507, 0.3282],
       device='cuda:0')
INFO   stdH:tensor([ 0.4494,  0.6443,  1.0400,  2.8991,  5.2118,  7.2254,  8.3581, 10.9510],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7967, 0.3465, 0.1039, 0.0219, 0.0077, 0.0054, 0.0043, 0.0039],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 730/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.220439
INFO   weighted_variance: tensor(0.2065, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.8113, device='cuda:0')
INFO   l1importance : tensor([0.1047, 0.4667, 0.4613, 0.5637, 0.3935, 0.2015, 0.2705, 0.3508, 0.3283],
       device='cuda:0')
INFO   stdH:tensor([ 0.4399,  0.6602,  1.0443,  2.9820,  4.9949,  7.3836,  8.4995, 10.4673],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.8232, 0.3497, 0.1036, 0.0218, 0.0080, 0.0054, 0.0042, 0.0039],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 740/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.344697
INFO   weighted_variance: tensor(0.2073, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.8687, device='cuda:0')
INFO   l1importance : tensor([0.1047, 0.4667, 0.4614, 0.5638, 0.3931, 0.2016, 0.2707, 0.3507, 0.3284],
       device='cuda:0')
INFO   stdH:tensor([ 0.4215,  0.6517,  1.0794,  3.0074,  5.2436,  7.2318,  8.7165, 10.5928],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.8555, 0.3541, 0.1043, 0.0214, 0.0081, 0.0059, 0.0045, 0.0043],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 750/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.227529
INFO   weighted_variance: tensor(0.2089, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7556, device='cuda:0')
INFO   l1importance : tensor([0.1047, 0.4663, 0.4615, 0.5638, 0.3929, 0.2016, 0.2710, 0.3506, 0.3285],
       device='cuda:0')
INFO   stdH:tensor([ 0.4619,  0.6737,  1.0528,  3.0119,  5.0390,  7.2015,  8.4376, 10.5620],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.7922, 0.3419, 0.1026, 0.0219, 0.0082, 0.0051, 0.0043, 0.0037],
       device='cuda:0')
INFO   ======== Reference label:0, ref_bands=(exp=0.000000) ========
INFO   Target bands: tensor([-0.2062, -0.1187, -0.0313,  0.0562,  0.1437,  0.2313,  0.3187,  0.4062],
       device='cuda:0')
INFO   Epoch : 760/1000000,  num_data:4000,lr: 0.001000,  elapsed_time: 0.332112
INFO   weighted_variance: tensor(0.2028, device='cuda:0', grad_fn=<DivBackward0>)
INFO   refnorm : 1, amp2_sum/refnorm2 : tensor(0.7940, device='cuda:0')
INFO   l1importance : tensor([0.1047, 0.4657, 0.4614, 0.5639, 0.3927, 0.2015, 0.2713, 0.3505, 0.3286],
       device='cuda:0')
INFO   stdH:tensor([ 0.4379,  0.6556,  1.0632,  3.0486,  4.9529,  7.0604,  8.8935, 10.3464],
       device='cuda:0')
INFO   (expH - E)/sigma: tensor([ 4.7143,  2.7143,  0.7143, -1.2857, -3.2857, -5.2857, -7.2857, -9.2857],
       device='cuda:0')
INFO   norm/refnorm: tensor([0.8132, 0.3481, 0.1040, 0.0218, 0.0084, 0.0058, 0.0047, 0.0043],
       device='cuda:0')
